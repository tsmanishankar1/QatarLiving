@using MudBlazor
@using QLN.Web.Shared.Models

<div class="card">
    @if (Item.IsPromoted)
    {
        <div class="Promoted-badge">
            <MudIcon Icon="@Icons.Material.Filled.FlashOn" Size="Size.Small" Class="Promoted-icon" />
            <span>Promoted</span>
        </div>
    }

    <MudIconButton Icon="@(isFavorite ? Icons.Material.Filled.Favorite : Icons.Material.Outlined.FavoriteBorder)"
                   Color="@(isFavorite ? Color.Error : Color.Inherit)"
                   OnClick="@(() => HandleHeartClick(Item))"
                   Class="@heartIconClass" />

    <div class="carousel-container" @onmouseover="() => isHovered = true" @onmouseout="() => isHovered = false">
        <img src="@Item.Images[activeIndex]" alt="@Item.Title" class="card-image" />

        @if (isHovered)
        {
            <button class="nav-arrow left" @onclick="PrevImage">&#10094;</button>
            <button class="nav-arrow right" @onclick="NextImage">&#10095;</button>
        }

        <div class="image-counter">@(activeIndex + 1)/@Item.Images.Count</div>

        @if (!string.IsNullOrEmpty(Item.Condition))
        {
            <div class="condition-badge">@Item.Condition</div>
        }
    </div>

    <div class="card-content"  @onclick="() => OnSelect.InvokeAsync(Item)">
        <div class="category">@Item.Category</div>
        <h3 class="title">@Item.Title</h3>
        <div class="features">
            <span>@Item.Color</span>
            <span>@Item.Storage</span>
            <span>@Item.Battery</span>
            <span>@Item.Processor</span>
        </div>
        <div class="price">@Item.Price</div>
        <div class="company-details">
            <img src="@Item.CompanyLogoUrl" alt="logo" class="company-logo" />
            <div class="company-info">
                <span class="company-name">@Item.Company</span>
                <div class="location">
                    <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" />
                    @Item.Location
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public PromotedItem Item { get; set; } = new();
    [Parameter] public EventCallback<PromotedItem> OnSelect { get; set; }
    [Parameter] public EventCallback<PromotedItem> OnHeartClick { get; set; }

    private bool isFavorite = false;
    private bool isHovered = false;
    private int activeIndex = 0;

    private string heartIconClass => isFavorite ? "heart-icon filled" : "heart-icon outlined";

    private async Task HandleHeartClick(PromotedItem item)
    {
        isFavorite = !isFavorite;
        await OnHeartClick.InvokeAsync(item);
    }

    private void PrevImage()
    {
        activeIndex = (activeIndex - 1 + Item.Images.Count) % Item.Images.Count;
    }

    private void NextImage()
    {
        activeIndex = (activeIndex + 1) % Item.Images.Count;
    }
}
<style>
    .card {
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        background: #fff;
        font-family: 'Public Sans', sans-serif;
        transition: transform 0.3s ease;
        flex: 1 1 auto;
    max-width: 100%;
    }

    .card:hover {
        transform: translateY(-2px);
    }

    .Promoted-badge {
        position: absolute;
        top: 10px;
        left: 0;
        background-color: #FF7F38;
        color: white;
        padding: 4px 6px;
        font-size: 11px;
        font-weight: 500;
        z-index: 2;
        display: flex;
        align-items: center;
        gap: 2px;
        border-radius: 0 2px 2px 0;
    }

    .heart-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border-radius: 50%;
        padding: 5px;
        box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);
        z-index: 2;
    }
     .heart-icon.filled {
        color: #FF7F38 !important;
        background: white !important;
    }

     .heart-icon.outlined {
        color: #FF7F38 !important;
        background: white !important;
    }

    .carousel-container {
        position: relative;
    }

    .card-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .nav-arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: #F0F0F0;
        color: #242424;
        border: none;
        padding: 4px 10px;
        border-radius: 50%;
        font-size: 18px;
        cursor: pointer;
        z-index: 3;
    }

    .nav-arrow.left {
        left: 10px;
    }

    .nav-arrow.right {
        right: 10px;
    }

    .image-counter {
        position: absolute;
        bottom: 10px;
        left: 10px;
        background: #454545CC;
        color: white;
        padding: 2px 10px;
        border-radius: 2px;
        font-size: 12px;
    }

    .condition-badge {
        position: absolute;
        bottom: 10px;
        right: 0px;
        background: #0071AF;
        color: white;
        padding: 2px 8px;
        font-size: 12px;
        font-weight: 500;
    }

    .card-content {
        padding: 15px;
    }

    .category {
        font-size: 11px;
        font-weight: 500;
        color: #646464;
    }

    .title {
        font-size: 18px;
        margin: 8px 0;
        font-weight: 600;
        line-height: 1.3;
    }

    .features {
        display: flex;
        gap: 10px;
        font-size: 13px;
        font-weight: 500;
        color: #242424;
        flex-wrap: wrap;
    }

    .price {
        font-size: 18px;
        font-weight: 600;
        color: #242424;
        margin: 8px 0;
    }

    .company-details {
        display: flex;
        align-items: flex-start;
        gap: 8px;
        margin-top: 8px;
    }

    .company-logo {
        width: 40px;
        height: 40px;
        border-radius: 2px;
        object-fit: contain;
    }

    .company-info {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .company-name {
        font-weight: 600;
        font-size: 12px;
        color: #00426D;
    }

    .location {
        font-size: 12px;
        font-weight: 600;
        color: #777;
        display: flex;
        align-items: center;
        gap: 4px;
    }
</style>
