@inherits DealsSubscriptionTableBase
@using QLN.ContentBO.WebUI.Components.ToggleTabs
@using MudBlazor
@using QLN.ContentBO.WebUI.Components.PaginationFooter

<MudPaper Class="pa-4">
    

    <div class="tab-content">
        @if (SelectedListings.Count > 0)
        {
            <div class="action-buttons">
                @if (selectedTab == "pendingApproval")
                {
                    <MudButton Class="capitalize-button" Color="Color.Success" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Check"
                               OnClick='() => ShowConfirmation("Approve Items", "Are you sure you want to approve selected Items?", "Approve", ApproveSelected)'>
                        Approve
                    </MudButton>
                }
                else if (selectedTab == "published")
                {
                    <MudButton Class="capitalize-button" Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.VisibilityOff"
                               OnClick='() => ShowConfirmation("Unpublish Items", "Are you sure you want to unpublish selected Items?", "Unpublish", UnpublishSelected)'>
                        Unpublish
                    </MudButton>
                    <MudButton Class="capitalize-button" Color="Color.Error" Variant="Variant.Filled" StartIcon="@Icons.Material.Rounded.Close"
                               OnClick='() => ShowConfirmation("Remove Items", "Are you sure you want to remove selected Items?", "Remove", RemoveSelected)'>
                        Remove
                    </MudButton>
                }
                else if (selectedTab == "unpublished")
                {
                    <MudButton Class="capitalize-button" Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.RemoveRedEye"
                               OnClick='() => ShowConfirmation("Publish Items", "Are you sure you want to publish selected Items?", "Publish", PublishSelected)'>
                        Publish
                    </MudButton>
                    <MudButton Class="capitalize-button" Color="Color.Error" Variant="Variant.Filled" StartIcon="@Icons.Material.Rounded.Close"
                               OnClick='() => ShowConfirmation("Remove Items", "Are you sure you want to remove selected Items?", "Remove", RemoveSelected)'>
                        Remove
                    </MudButton>
                }

                @if (selectedTab == "promoted")
                {
                    <MudButton Class="capitalize-button" Color="Color.Primary" Variant="Variant.Filled"
                               OnClick='() => ShowConfirmation("Unpromote Items", "Are you sure you want to unpromote selected Items?", "Unpromote", UnpromoteSelected)'>
                        Unpromote
                    </MudButton>
                }

                @if (selectedTab == "featured")
                {
                    <MudButton Class="capitalize-button" Color="Color.Primary" Variant="Variant.Filled"
                               OnClick='() => ShowConfirmation("Unfeature Items", "Are you sure you want to unfeature selected Items?", "Unfeature", UnfeatureSelected)'>
                        Unfeature
                    </MudButton>
                }

                @if (selectedTab == "p2p" || selectedTab == "promoted" || selectedTab == "featured")
                {
                    <MudButton Class="capitalize-button" Color="Color.Error" Variant="Variant.Filled" StartIcon="@Icons.Material.Rounded.Close"
                               OnClick='() => ShowConfirmation("Remove Items", "Are you sure you want to remove selected Items?", "Remove", RemoveSelected)'>
                        Remove
                    </MudButton>
                }
            </div>

            <div class="alert-container">
                <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Primary" />
                @($"{SelectedListings.Count} item(s) selected.")
            </div>
        }
    </div>

    <MudTable Items="Listings"
              Hover="true"
              Bordered="true"
              Elevation="0"
              @bind-SelectedItems="SelectedListings"
              Class="mud-table event-custom-table">

        <HeaderContent>
            <MudTh class="header-cell">Order Id</MudTh>
            <MudTh class="header-cell">Subscription Type</MudTh>
            <MudTh class="header-cell">User Name</MudTh>
            <MudTh class="header-cell">Email</MudTh>
            <MudTh class="header-cell">Mobile</MudTh>
            <MudTh class="header-cell">Whatsapp</MudTh>
            <MudTh class="header-cell">Amount</MudTh>
            <MudTh class="header-cell">Status</MudTh>
            <MudTh class="header-cell">Start Date</MudTh>
            <MudTh class="header-cell">End Date</MudTh>
            <MudTh class="header-cell">Whatsapp Leads</MudTh>
            <MudTh class="header-cell">Phone Leads</MudTh>

            <MudTh class="header-cell">Actions</MudTh>

        </HeaderContent>

        <RowTemplate>
            <MudTd>@context.UserId</MudTd>
            <MudTd>@context.Section</MudTd> 
            <MudTd>@context.UserName</MudTd>
            <MudTd>@context.Email</MudTd>
            <MudTd>@context.Mobile</MudTd>
            <MudTd>@context.Whatsapp</MudTd>
            <MudTd>@context.Amount</MudTd>
            <MudTd>@context.Status</MudTd>
            <MudTd>@context.CreationDate.ToString("dd-MM-yyyy hh:mmtt")</MudTd>
            <MudTd>@context.ExpiryDate.ToString("dd-MM-yyyy hh:mmtt")</MudTd>
            <MudTd>5</MudTd>
            <MudTd>3</MudTd>

            <MudTd>
                <MudMenu Class="mud-table-menu" Icon="@Icons.Material.Filled.MoreVert" Dense="true">
                    <MudMenuItem OnClick="() => OnPreview(context)">
                        <img src="/qln-images/preview_icon.svg" class="menu-icon-style" alt="Ignore" />
                        <span class="menu-text">View</span>
                    </MudMenuItem>
                    <MudMenuItem OnClick="() => OnEdit(context)">
                        <img src="/qln-images/edit_dark_icon.svg" class="menu-icon-style" alt="Ignore" />
                        <span class="menu-text">Edit</span>
                    </MudMenuItem>
                    
                    <MudMenuItem OnClick='() => ShowConfirmation("Remove Item", "Are you sure you want to remove this item?", "Remove", () => OnRemove(context))'
                                 Class="mud-text-error">
                        <img src="/qln-images/remove_icon.svg" class="menu-icon-style" alt="Ignore" />
                        <span class="menu-text">Remove</span>
                    </MudMenuItem>
                  
                </MudMenu>
            </MudTd>
        </RowTemplate>
    </MudTable>
     <PaginationFooter TotalItems="@TotalCount" CurrentPage="@currentPage" PageSize="@pageSize"
                OnPageChange="@HandlePageChange" OnPageSizeChange="@HandlePageSizeChange" />
</MudPaper>
