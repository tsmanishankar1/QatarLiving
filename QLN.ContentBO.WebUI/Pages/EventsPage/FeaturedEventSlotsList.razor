@using QLN.ContentBO.WebUI.Models
@inherits FeaturedEventSlotsBase

@if (FeaturedEventSlots == null || Categories == null)
{
    <div class="d-flex justify-center mt-4">
        <div class="spinner-border text-primary"></div>
    </div>
}
else
{
    var indexedFeatured = FeaturedEventSlots
        .Select((e, i) => new { Slot = e, Index = i + 1 })
        .ToList();

    <table class="table table-hover featured-table" style="width: 100%;">
        <thead>
            <tr>
                <th style="width: 40px;"></th> <!-- drag handle -->
                <th style="width: 60px;">Slot</th>
                <th>Title</th>
                <th>Category</th>
                <th>End Date</th>
                <th style="width: 120px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var context in indexedFeatured)
            {
                <tr data-slot-id="@context.Slot.SlotNumber">
                    <td>
                        <img src="/qln-images/drag_icon.svg" 
                             class="drag-handle" 
                             style="cursor: grab; width: 24px;" 
                             alt="drag" />
                    </td>
                    <td>@context.Index</td>
                    <td>
                        @if (context.Slot.Event?.EventTitle == "Feature an Event")
                        {
                            <span class="placeholder-text"
                                  style="color: gray; cursor: pointer;"
                                  @onclick="@(() => ReplaceSlot.InvokeAsync(context.Slot))">
                                @context.Slot.Event?.EventTitle
                            </span>
                        }
                        else
                        {
                            <a href="#" class="event-link" style="text-decoration: none; color: #1976d2;">
                                @context.Slot.Event?.EventTitle
                            </a>
                        }
                    </td>
                    <td>
                        @Categories.FirstOrDefault(c => c.Id == context.Slot.Event?.CategoryId)?.CategoryName
                    </td>
                    <td>
                        "asdkasdk"
                    </td>
                    <td>
                        <div class="d-flex gap-2">
                            <img src="/qln-images/replace_icon.svg"
                                 alt="replace"
                                 class="action-icon-style drag-handle"
                                 style="cursor: grab; width: 24px;"
                                 @onclick="@(() => ReplaceSlot.InvokeAsync(context.Slot))" />
                            <img src="/qln-images/delete_icon.svg"
                                 alt="delete"
                                 class="action-icon-style"
                                 style="cursor: pointer; width: 24px;"
                                 @onclick="@(() => OnDelete.InvokeAsync(context?.Slot?.Event?.Id.ToString()))" />
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<style>
    /* Base table styling */
.featured-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/* Header styling */
.featured-table thead th {
    background: #f9f9f9;
    font-weight: 600;
    font-size: 14px;
    padding: 12px;
    text-align: left;
    color: #555;
    border-bottom: 1px solid #e0e0e0;
}

/* Row styling */
.featured-table tbody tr {
    border-bottom: 1px solid #e0e0e0;
    transition: background 0.2s ease;
}

.featured-table tbody tr:hover {
    background: #f5f5f5;
}

/* Cell styling */
.featured-table tbody td {
    padding: 12px;
    vertical-align: middle;
    font-size: 14px;
    color: #333;
}

/* Drag handle */
.drag-handle {
    cursor: grab;
}

/* Action icons container */
.action-buttons {
    display: flex;
    align-items: center;
    gap: 8px;
}

/* Replace and delete buttons */
.action-button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    background: #f44336; /* Red */
    border-radius: 6px;
    width: 32px;
    height: 32px;
    cursor: pointer;
    transition: background 0.2s ease;
}

.action-button:hover {
    background: #d32f2f;
}

/* Action icons */
.action-button img {
    width: 18px;
    height: 18px;
    filter: brightness(0) invert(1); /* make icon white */
}

</style>