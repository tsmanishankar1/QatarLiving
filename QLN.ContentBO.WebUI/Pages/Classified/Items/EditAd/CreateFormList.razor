@inherits CreateFormListBase
@using QLN.ContentBO.WebUI.Models;
@using QLN.ContentBO.WebUI.Components.PhoneNumberInput;
@using PSC.Blazor.Components.MarkdownEditor.Enums

     <div class="create-form-list">
        <h3 class="form-heading-f1">Ad Information</h3>
 
            <MudSelect T="long?" Class="white-bg" Label="Category" Variant="Variant.Outlined"
                Value="@Ad.CategoryId"
                ValueChanged="@OnCategoryChanged"
                For="@(() => Ad.CategoryId)"
                FullWidth="true">
             @if (IsLoadingCategories)
            {
                  <MudSelectItem T="long?" Value="@(0)" Disabled="true">Loading...</MudSelectItem>
            }
            else
            {
                @foreach (var cat in CategoryTrees)
                {
                    if (cat != null && cat?.Id != null && cat.CategoryName != null)
                    {
                        <MudSelectItem T="long?" Value="@cat.Id">@cat.CategoryName</MudSelectItem>
                    }
                }
            }
        </MudSelect>


        @if (Ad.CategoryId != null && SelectedCategory?.Fields?.Any() == true)
        {
          <MudSelect T="long?" Class="white-bg" Label="Subcategory" Variant="Variant.Outlined"
                    Value="@Ad.L1CategoryId"
                    ValueChanged="@OnSubCategoryChanged"
                    For="@(() => Ad.L1CategoryId)"
                    FullWidth="true">
                @foreach (var sub in SelectedCategory?.Fields ?? Enumerable.Empty<ClassifiedsCategoryField>())
                {
                    if (sub?.Id != null && sub.CategoryName != null)
                    {
                        <MudSelectItem T="long?" Value="@sub.Id">@sub.CategoryName</MudSelectItem>
                    }
                }
            </MudSelect>

        }

        @if (Ad.L1CategoryId != null && SelectedSubcategory?.Fields?.Any() == true)
        {
             var firstField = SelectedSubcategory.Fields.FirstOrDefault();
            if (firstField != null && firstField.Type == "L2Category")
            {
            <MudSelect T="long?"Class="white-bg" Label="Section" Variant="Variant.Outlined"
                Value="@Ad.L2CategoryId"
                ValueChanged="@OnSubSubCategoryChanged"
                For="@(() => Ad.L2CategoryId)"
                FullWidth="true">
                 @foreach (var subsub in SelectedSubcategory?.Fields ?? Enumerable.Empty<ClassifiedsCategoryField>())
                {
                    if (subsub?.Id != null && subsub.CategoryName != null)
                    {
                        <MudSelectItem T="long?" Value="@subsub.Id">@subsub.CategoryName</MudSelectItem>
                    }
                }
        </MudSelect>
        }

        }
        @if (AvailableFields != null)
        {
            @foreach (var field in AvailableFields.Where(f => !ExcludedFields.Contains(f.CategoryName)))
            {
                if (!Ad.DynamicFields.ContainsKey(field.CategoryName))
                {
                    Ad.DynamicFields[field.CategoryName] = string.Empty;
                }

                <div class="mt-2">
                    @if (field.Type == "dropdown" || field.Type == "Dropdown")
                    {
                        <MudSelect T="string"
                                Label="@field.CategoryName"
                                Variant="Variant.Outlined"
                                @bind-Value="Ad.DynamicFields[field.CategoryName]"
                                FullWidth="true"
                                Class="white-bg"
                                Immediate="true">
                            @foreach (var option in field.Options)
                            {
                                <MudSelectItem T="string" Value="@option">@option</MudSelectItem>
                            }
                        </MudSelect>
                    }
                    else if (field.Type == "string")
                    {
                        <MudTextField T="string"
                                    Label="@field.CategoryName"
                                    Variant="Variant.Outlined"
                                    @bind-Value="Ad.DynamicFields[field.CategoryName]"
                                    FullWidth="true"
                                    Class="white-bg" />
                    }

                        @if (DynamicFieldErrors.TryGetValue(field.CategoryName, out var errors))
                    {
                        @foreach (var error in errors)
                        {
                            <div class="mud-input-error">@error</div>
                        }
                    }
                </div>
            }
        }
       <MudTextField Class="white-bg"  Immediate="true" Variant="Variant.Outlined"  MaxLength="20" T="int" Label="Price"
                      @bind-Value="Ad.Price" For="@(() => Ad.Price)" FullWidth="true" />

        <h3 class="form-heading">Description and Features</h3>
        <MudTextField Class="white-bg"  Immediate="true" Variant="Variant.Outlined" MaxLength="50" T="string" Label="Title"
                      @bind-Value="Ad.Title" For="@(() => Ad.Title)" FullWidth="true" />

         <!-- START Custom Markdown Editor -->
            <MarkdownEditor @bind-Value="@Ad.Description" Placeholder="Start Typing" HideIcons="@HiddenIcons" CustomButtonClicked="@OnCustomButtonClicked" @ref="MarkdownEditorRef">
                <Toolbar>
                    <MarkdownToolbarButton Action="MarkdownAction.Bold" Icon="fa fa-bold" Title="Bold" />
                    <MarkdownToolbarButton Action="MarkdownAction.Italic" Icon="fa fa-italic" Title="Italic" />
                    <MarkdownToolbarButton Action="MarkdownAction.Heading" Icon="fa fa-header" Title="Heading" />
                    <MarkdownToolbarButton Action="MarkdownAction.Strikethrough" Icon="fa fa-strikethrough" Title="Strikethrough" />

                    <MarkdownToolbarButton Separator Action="MarkdownAction.Code" Icon="fa fa-code" Title="Code Block" />
                    <MarkdownToolbarButton Action="MarkdownAction.Quote" Icon="fa fa-quote-right" Title="Quote" />
                    <MarkdownToolbarButton Action="MarkdownAction.HorizontalRule" Icon="fa fa-minus" Title="Horizontal Rule" />
                    <MarkdownToolbarButton Action="MarkdownAction.UnorderedList" Icon="fa fa-list-ul" Title="Unordered List" />
                    <MarkdownToolbarButton Action="MarkdownAction.OrderedList" Icon="fa fa-list-ol" Title="Ordered List" />

                    <MarkdownToolbarButton Separator Action="MarkdownAction.Link" Icon="fa fa-link" Title="Link" />
                    <MarkdownToolbarButton Action="MarkdownAction.Custom" Name="@UploadImageButtonName" Icon="fa fa-upload" Title="Upload Image" />
                    <MarkdownToolbarButton Action="MarkdownAction.Image" Icon="fa fa-image" Title="Image" />

                    <MarkdownToolbarButton Separator Action="MarkdownAction.Custom" Name="CustomPreview" Icon="fa fa-eye no-disable" Title="Toggle Preview (Ctrl-P)" />
                    <MarkdownToolbarButton Action="MarkdownAction.SideBySide" Icon="fa fa-columns no-disable no-mobile" Title="Side by Side" />
                    <MarkdownToolbarButton Action="MarkdownAction.Guide" Icon="fa fa-question-circle" Title="Markdown Guide" />
                </Toolbar>
            </MarkdownEditor>

        <h3 class="form-heading">Contact Details</h3>
        <div class="form-group">
                <!-- Phone -->
                    <PhoneNumberInput
                        DefaultCountryCode="@DefaultSelectedPhoneCountry"
                        SelectedCountry="@SelectedPhoneCountry"
                        Placeholder="Phone Number"
                        SelectedCountryChanged="@OnPhoneCountryChanged"
                        PhoneNumber="@Ad.ContactNumber"
                        PhoneNumberChanged="@OnPhoneChanged" />
                <ValidationMessage For="@(() => Ad.ContactNumber)" />
                </div>
                <div class="form-group">
                    <!-- WhatsApp -->
                    <PhoneNumberInput
                        DefaultCountryCode="@DefaultSelectedWhatsappCountry"
                        SelectedCountry="@SelectedWhatsappCountry"
                        Placeholder="WhatsApp Number"
                        SelectedCountryChanged="@OnWhatsappCountryChanged"
                        PhoneNumber="@Ad.WhatsappNumber"
                        PhoneNumberChanged="@OnWhatsappChanged" />
                <ValidationMessage For="@(() => Ad.WhatsappNumber)" />
                </div>

        <h3 class="form-heading">Location</h3>

            <MudSelect T="string" Class="white-bg" Label="Zone" Variant="Variant.Outlined"
                Value="@Ad.Zone"
                Immediate="true"
                ValueChanged="@OnZoneChanged"
                For="@(() => Ad.Zone)"
                FullWidth="true">

             @if (IsLoadingZones)
            {
                  <MudSelectItem T="string" Value="@("__loading__")" Disabled="true">Loading...</MudSelectItem>
            }
            else
            {
                @foreach (var zone in Zones)
                {
                    <MudSelectItem T="string" Value="@zone.Id.ToString()">@zone.Name</MudSelectItem>
                }
            }
        </MudSelect>
        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="string" Label="Street Number"
                    Value="@Ad.StreetNumber"
                    ValueChanged="@OnStreetNumberChanged"
                    Immediate="true"
                    For="@(() => Ad.StreetNumber)" FullWidth="true" />

        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="string" Label="Building Number"
                    Value="@Ad.BuildingNumber"
                    ValueChanged="@OnBuildingNumberChanged"
                    Immediate="true"
                    For="@(() => Ad.BuildingNumber)" FullWidth="true" />


        <div id="map" style="height: 300px; width: 100%;"></div>

         <div class="checkbox-section">
            <div class="checkbox-left">
                <MudCheckBox @bind-Value="Ad.IsAgreed" Color="Color.Primary" />
            </div>
            <div class="checkbox-right">
                <span>
                    I agree to the
                    <a href="https://www.qatarliving.com/rules-advertising" target="_blank">Rules for Advertising</a>
                    and the
                    <a href="https://www.qatarliving.com/terms-of-use" target="_blank">Terms of Use</a>.
                </span>
            </div>
        </div>
        <ValidationMessage For="@(() => Ad.IsAgreed)" />
    </div>