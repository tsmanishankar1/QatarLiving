@page "/user-profile"
@using MudBlazor
@using QLN.Web.Shared.Pages.UserProfile

<MudContainer MaxWidth="MaxWidth.False">
    <MudGrid Class="mt-4">
        <MudItem xs="12" md="3">
            <MudNavMenu>
                @foreach (var item in SidebarItems)
            {
                <MudPaper 
                    Elevation="0"
                    Class="pa-2 mb-1 d-flex justify-space-between align-center rounded cursor-pointer"
                    Style="@((item == SelectedItem) 
                    ? "background-color: var(--color-accent); color: var(--color-text-white);" 
                    : "background-color: transparent; color: black;")"
                        @onclick="() => SelectedItem = item">
                         <MudText Class="m-0" Typo="Typo.body2">@item.Label</MudText>
                        <MudText Class="m-0 font-weight-bold" Typo="Typo.body2">@item.Count</MudText>
                </MudPaper>
   
            }
                <MudDivider Class="my-2" />



                <MudPaper 
    Elevation="0"
    Class="pa-2 mb-1 d-flex justify-space-between align-center rounded cursor-pointer"
    Style="@((SelectedItem == Messages) 
        ? "background-color: #003A63; color: white;" 
        : "background-color: transparent; color: black;")"
    @onclick="@(() => SelectedItem = Messages)">
    <MudText Class="m-0" Typo="Typo.body2">@Messages.Label</MudText>
    <MudText Class="m-0 font-weight-bold" Typo="Typo.body2">@Messages.Count</MudText>
</MudPaper>
<MudPaper 
    Elevation="0"
    Class="pa-2 mb-1 d-flex justify-space-between align-center rounded cursor-pointer"
    Style="@((SelectedItem == ProfileSettings) 
        ? "background-color: #003A63; color: white;" 
        : "background-color: transparent; color: black;")"
    @onclick="@(() => SelectedItem = ProfileSettings)">
    <MudText Class="m-0" Typo="Typo.body2">@ProfileSettings.Label</MudText>
</MudPaper>
<MudPaper 
    Elevation="0"
    Class="pa-2 mb-1 d-flex justify-space-between align-center rounded cursor-pointer"
    Style="@((SelectedItem == VerifyAccount) 
        ? "background-color: #003A63; color: white;" 
        : "background-color: transparent; color: black;")"
    @onclick="@(() => SelectedItem = VerifyAccount)">
    
    <MudText Class="m-0" Typo="Typo.body2">@VerifyAccount.Label</MudText>
</MudPaper>

 <MudDivider Class="my-2" />
<MudPaper 
    Elevation="0"
    Class="pa-2 mb-1 d-flex justify-space-between align-center rounded cursor-pointer"
    Style="@((SelectedItem == Subscriptions) 
        ? "background-color: #003A63; color: white;" 
        : "background-color: transparent; color: black;")"
    @onclick="@(() => SelectedItem = Subscriptions)">
    
    <MudText Class="m-0" Typo="Typo.body2">@Subscriptions.Label</MudText>
</MudPaper>
            </MudNavMenu>
        </MudItem>

        <!-- Main Content -->
        <MudItem xs="12" md="9">
            @if (SelectedItem?.ComponentType != null)
            {
                <DynamicComponent Type="@SelectedItem.ComponentType" />
            }
            else
            {
                <MudText>Select a section to view its content.</MudText>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    class SidebarItem
    {
        public string Label { get; set; }
        public int? Count { get; set; }
        public Type ComponentType { get; set; }
    }

    SidebarItem SelectedItem { get; set; }
    SidebarItem Messages { get; set; } = new SidebarItem
    {
        Label = "Messages",
        ComponentType = typeof(MessagesComponet) 
    };
    SidebarItem ProfileSettings { get; set; } = new SidebarItem
    {
        Label = "Profile & Settings",
        ComponentType = typeof(ProfilePage) 
    };
    SidebarItem VerifyAccount { get; set; } = new SidebarItem
    {
        Label = "Verify Account",
        ComponentType = typeof(MessagesComponet) 
    };
    SidebarItem Subscriptions { get; set; } = new SidebarItem
    {
        Label = "Subscriptions",
        ComponentType = typeof(MessagesComponet) 
    };



    List<SidebarItem> SidebarItems = new()
    {
        new SidebarItem { Label = "Timeline", Count = 0, ComponentType = typeof(Timeline) },
        new SidebarItem { Label = "Forum Posts", Count = 0, ComponentType = typeof(ForumPosts) },
        new SidebarItem { Label = "Groups", Count = 0, ComponentType = typeof(Groups) },
        new SidebarItem { Label = "Pages", Count = 0, ComponentType = typeof(PagesComponent) },
        new SidebarItem { Label = "Comments", Count = 0, ComponentType = typeof(CommentsComponent) },
        new SidebarItem { Label = "Ads Posted", Count = 0, ComponentType = typeof(AdsPostedComponent) },
        new SidebarItem { Label = "Unpublished Ads", Count = 0, ComponentType = typeof(UnpublishedAdsComponent) },
        new SidebarItem { Label = "Ads Sold", Count = 0, ComponentType = typeof(AdsSoldComponent) },
        new SidebarItem { Label = "Posted Jobs", Count = 0, ComponentType = typeof(PostedJobsComponent) },
        new SidebarItem { Label = "Unpublished Jobs", Count = 0, ComponentType = typeof(UnpublishedJobsComponent) },
        new SidebarItem { Label = "Jobs Closed", Count = 0, ComponentType = typeof(JobsClosedComponent) },
        new SidebarItem { Label = "Jobseeker profile", Count = 0, ComponentType = typeof(JobseekerProfileComponent) },
        new SidebarItem { Label = "Freelancer profile", Count = 0, ComponentType = typeof(FreelancerProfileComponent) },
        new SidebarItem { Label = "Favourite Items", Count = 0, ComponentType = typeof(FavouriteItemsComponent) }, 
        new SidebarItem { Label = "Subscription", Count = 0, ComponentType = typeof(Supscriptions) }

    };

}