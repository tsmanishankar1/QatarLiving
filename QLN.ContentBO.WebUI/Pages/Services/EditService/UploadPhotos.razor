@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JS
@using QLN.ContentBO.WebUI.Models;
@inherits UploadPhotosBase

<h3 class="Upload-heder">Upload Photos</h3>

<div class="Upload-container">
    <div class="d-flex align-items-center mb-2">
        <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-2 info-icon" />
        <span class="photo-guidelines">
            Upload at least 4 photos (maximum 9 photos) to attract shoppers to your offer.
            Use landscape orientation (horizontal) for optimal photo display.
            <MudLink href="#">View Photo Suggestions</MudLink>
        </span>
    </div>

    <MudText Typo="Typo.body2" Class="mb-3 drag-instruction-text">
        Hold and drag 
        <img src="/qln-images/classifieds/openwith_icon.svg" alt="Drag Icon" class="inline-drag-icon" />
        to reorder.
    </MudText>

    <div id="image-upload-container" class="image-grid">
        @if (Images != null && Images.Any())
    {
        @foreach (var image in Images.OrderBy(img => img.Order))
        {
            <div class="item-upload-box" data-id="@image.Id" @key="string.Join('-', image.Id, image.Order)">
                <label class="upload-label">
                    @if (string.IsNullOrEmpty(image.Url))
                    {
                        <div class="upload-content">
                            <div class="upload-icon-box">
                                <MudIcon Icon="@Icons.Material.Filled.Add" Class="item-upload-icon" />
                            </div>
                            <div class="item-upload-text">Upload</div>
                        </div>
                    }

                    <InputFile OnChange="@(e => OnMultipleFilesSelected(e, image.Id.Value))" multiple class="file-input" />

                    @if (!string.IsNullOrEmpty(image.Url))
                    {
                        <img src="@image.Url" alt="Uploaded Image" class="preview-image" />
                        <MudIconButton Icon="@Icons.Material.Rounded.DeleteOutline" Class="delete-icon"
                                       OnClick="@(() => RemoveImage(image.Id.Value))" />
                    }

                    @if (image.Order == 0)
                    {
                        <div class="cover-photo-label">Cover Photo</div>
                    }
                </label>
            </div>
        }
        }

        @if (Images?.Count < MaxImages)
        {
            <div class="item-upload-box add-more-box" @onclick="AddImageBox">
                <div class="upload-content">
                    <MudIcon Icon="@Icons.Material.Filled.Add" Class="item-upload-icon" />
                    <div class="item-upload-text">Add More<br />Photos</div>
                </div>
            </div>
        }
    </div>
</div>