@using QLN.Common.DTO_s
@using QLN.Web.Shared.Components.MoreFilters

<MoreFilters HasWarrantyCertificate="HasWarrantyCertificate"ConfirmedOptions="ConfirmedOptions" OnApply="ApplyFilters" OnReset="ResetFilters">
    <div>
   @foreach (var field in SelectedFields)
{
    if (field.Name == "Brands" || field.Name == "Brand") continue;

    <div class="filter-section">
        <label class="section-label">@field.Name</label>

        @if (field.Name == "Model")
        {
            <div class="model-filter-wrapper">
                <input placeholder="Search"
       class="model-search"
       @bind="ModelSearchTerm"
       @bind:event="oninput" />

                <div class="model-list-scroll">
                    <div class="model-subheading">All</div>

                   @foreach (var option in GetFilteredModels(field))

                    {
                        // Add condition to segment if needed (e.g. POPULAR vs All)

                        <div class="checkbox-item model-item">
                            <MudCheckBox @bind-Value="SelectedOptions[field.Name][option]"
                                         Color="Color.Primary"
                                         UncheckedColor="Color.Default"
                                         Class="mb-1" />
                            <span class="option-text">@option</span>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="option-grid">
                @foreach (var option in field.Options)
                {
                    <div class="checkbox-item">
                        <MudCheckBox @bind-Value="SelectedOptions[field.Name][option]"
                                     Color="Color.Primary"
                                     UncheckedColor="Color.Default"
                                     Class="mb-1" />
                        @if (field.Name == "Colour")
                        {
                            <span class="color-dot" style="background-color:@option.ToLower();"></span>
                        }
                        <span class="option-text">@option</span>
                    </div>
                }
            </div>
        }
    </div>
}
<div class="checkbox-item">
  <MudCheckBox @bind-Value="HasWarrantyCertificate"
             Color="Color.Primary"
             UncheckedColor="Color.Default"
             Class="mb-1" />
<span class="option-text">Ads with an active warranty</span>

</div>

</div>
</MoreFilters>


@code {
    private Dictionary<string, bool> modelSelection = new();
 protected List<CategoryField> CategoryFilters => SearchState.ItemCategoryFilters;
    [Inject] protected SearchStateService SearchState { get; set; }
    private string ModelSearchTerm = "";
private bool HasWarrantyCertificate { get; set; }


    protected override void OnInitialized()
    {
        foreach (var item in PopularModels)
            modelSelection[item] = false;
    }

    private Task ApplyFilters()
    {
        Console.WriteLine("Filters applied.");
        return Task.CompletedTask;
    }

    private Task ResetFilters()
    {
        Console.WriteLine("Filters reset.");
        return Task.CompletedTask;
    }
}

<style>

    .section-label {
        font-weight: 500;
        font-size: 15px;
        color: #FF7F38;
        margin-bottom: 6px;
        display: block;
    }

    .search-wrapper {
        display: flex;
        align-items: center;
        gap: 6px;
        background: #f4f4f4;
        padding: 6px;
        border-radius: 6px;
        margin-bottom: 10px;
    }

    .search-box {
        flex: 1;
        border: none;
        outline: none;
        background: transparent;
    }

    .filter-group-label {
        font-weight: 500;
        margin-top: 8px;
        margin-bottom: 4px;
        background: #F6F6F6;
        padding: 4px 8px;
        font-size: 15px;
        border-radius: 4px;
        color: #454545;
    }

    .filter-section {
        margin-bottom: 16px;
    }

    .checkbox-item {
        display: flex;
        align-items: center;
        font-size: 15px;
        fount-weight: 400;
        color: #242424;
        padding: 4px 0;
        gap: 8px;
    }

    .color-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 8px;
    }

    .color-item {
        border: 1px solid #ddd;
        padding: 4px;
        border-radius: 6px;
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 13px;
    }

</style>