// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QLN.Common.Infrastructure.QLDbContext;

#nullable disable

namespace QLN.Common.Migrations.QLPayments
{
    [DbContext(typeof(QLPaymentsContext))]
    partial class QLPaymentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QLN.Common.DTO_s.Payments.D365LookupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("D365ItemId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<int>("FeatureBudget")
                        .HasColumnType("integer");

                    b.Property<int>("ProductType")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.Property<int>("PublishBudget")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("D365Lookups");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.Payments.D365PaymentLogsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Operation")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("D365PaymentLogs");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.Payments.D365RequestsLogsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("D365RequestsLogs");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.Payments.PaymentEntity", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentId"));

                    b.Property<long?>("AdId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AttachedPaymentId")
                        .HasColumnType("integer");

                    b.Property<int?>("CardType")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Fee")
                        .HasColumnType("numeric");

                    b.Property<int>("Gateway")
                        .HasColumnType("integer");

                    b.Property<int?>("GatewayResponse")
                        .HasColumnType("integer");

                    b.Property<string>("PaidByUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Points")
                        .IsRequired()
                        .HasColumnType("decimal(10,1)");

                    b.Property<string>("Products")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValueSql("'[]'::jsonb");

                    b.Property<int>("Source")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("SubVertical")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.Property<int>("TriggeredSource")
                        .HasColumnType("integer");

                    b.Property<List<Guid>>("UserAddonIds")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid[]")
                        .HasDefaultValueSql("'{}'::uuid[]");

                    b.Property<Guid?>("UserSubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Vertical")
                        .HasColumnType("integer");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.Payments.D365PaymentLogsEntity", b =>
                {
                    b.OwnsOne("object", "Response", b1 =>
                        {
                            b1.Property<int>("D365PaymentLogsEntityId")
                                .HasColumnType("integer");

                            b1.HasKey("D365PaymentLogsEntityId");

                            b1.ToTable("D365PaymentLogs");

                            b1.ToJson("Response");

                            b1.WithOwner()
                                .HasForeignKey("D365PaymentLogsEntityId");
                        });

                    b.Navigation("Response")
                        .IsRequired();
                });

            modelBuilder.Entity("QLN.Common.DTO_s.Payments.D365RequestsLogsEntity", b =>
                {
                    b.OwnsOne("QLN.Common.DTO_s.Payments.D365Order", "Payload", b1 =>
                        {
                            b1.Property<int>("D365RequestsLogsEntityId")
                                .HasColumnType("integer");

                            b1.Property<int>("AdId")
                                .HasColumnType("integer")
                                .HasAnnotation("Relational:JsonPropertyName", "AdId");

                            b1.Property<string>("Classification")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "Classification");

                            b1.Property<string>("D365CustId")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "D365CustId");

                            b1.Property<string>("D365Itemid")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "D365Itemid");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "Email");

                            b1.Property<DateTime?>("EndDate")
                                .HasColumnType("timestamp with time zone")
                                .HasAnnotation("Relational:JsonPropertyName", "end_date");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "Mobile");

                            b1.Property<string>("OrderId")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "OrderId");

                            b1.Property<decimal?>("Price")
                                .HasColumnType("numeric")
                                .HasAnnotation("Relational:JsonPropertyName", "Price");

                            b1.Property<int>("QLUserId")
                                .HasColumnType("integer")
                                .HasAnnotation("Relational:JsonPropertyName", "QLUserId");

                            b1.Property<string>("QLUsername")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "QLUsername");

                            b1.Property<int?>("Qty")
                                .HasColumnType("integer")
                                .HasAnnotation("Relational:JsonPropertyName", "Qty");

                            b1.Property<string>("SalesType")
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "SalesType");

                            b1.Property<DateTime?>("StartDate")
                                .HasColumnType("timestamp with time zone")
                                .HasAnnotation("Relational:JsonPropertyName", "start_date");

                            b1.HasKey("D365RequestsLogsEntityId");

                            b1.ToTable("D365RequestsLogs");

                            b1.ToJson("Payload");

                            b1.WithOwner()
                                .HasForeignKey("D365RequestsLogsEntityId");
                        });

                    b.OwnsOne("object", "Response", b1 =>
                        {
                            b1.Property<int>("D365RequestsLogsEntityId")
                                .HasColumnType("integer");

                            b1.HasKey("D365RequestsLogsEntityId");

                            b1.ToTable("D365RequestsLogs");

                            b1.ToJson("Response");

                            b1.WithOwner()
                                .HasForeignKey("D365RequestsLogsEntityId");
                        });

                    b.Navigation("Payload")
                        .IsRequired();

                    b.Navigation("Response")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
