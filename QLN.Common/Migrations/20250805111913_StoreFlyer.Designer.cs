// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QLN.Common.Infrastructure.QLDbContext;

#nullable disable

namespace QLN.Common.Migrations.QLClassified
{
    [DbContext(typeof(QLClassifiedContext))]
    [Migration("20250805111913_StoreFlyer")]
    partial class StoreFlyer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.ProductFeatures", b =>
                {
                    b.Property<Guid>("ProductFeaturesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StoreProductId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductFeaturesId");

                    b.HasIndex("StoreProductId");

                    b.ToTable("ProductFeature");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.ProductImages", b =>
                {
                    b.Property<Guid>("ProductImagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StoreProductId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductImagesId");

                    b.HasIndex("StoreProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.ProductPageCoordinates", b =>
                {
                    b.Property<Guid>("PageCoordinatesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<int?>("StartPixHorizontal")
                        .HasColumnType("integer");

                    b.Property<int?>("StartPixVertical")
                        .HasColumnType("integer");

                    b.Property<Guid>("StoreProductId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("PageCoordinatesId");

                    b.HasIndex("StoreProductId")
                        .IsUnique();

                    b.ToTable("ProductPageCoordinate");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.StoreFlyers", b =>
                {
                    b.Property<Guid>("StoreFlyersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FlyerId")
                        .HasColumnType("uuid");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uuid");

                    b.HasKey("StoreFlyersId");

                    b.ToTable("StoreFlyer");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.StoreProducts", b =>
                {
                    b.Property<Guid>("StoreProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FlyerId")
                        .HasColumnType("uuid");

                    b.Property<int>("PageNumber")
                        .HasColumnType("integer");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductLogo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductSummary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StoreProductId");

                    b.HasIndex("FlyerId");

                    b.ToTable("StoreProduct");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.StoreStatus", b =>
                {
                    b.Property<int>("StoreStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StoreStatusId"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StoreStatusId");

                    b.ToTable("StoreStatuses");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.StoresSubscriptionDto", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EmailLeads")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<int>("PhoneLeads")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("SubscriptionType")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<int>("WebLeads")
                        .HasColumnType("integer");

                    b.Property<string>("WebUrl")
                        .HasColumnType("text");

                    b.Property<string>("Whatsapp")
                        .HasColumnType("text");

                    b.Property<int>("WhatsappLeads")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.ToTable("StoresSubscriptions");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.SubscriptionTypes", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubscriptionId"));

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SubscriptionId");

                    b.ToTable("SubscriptionType");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.ProductFeatures", b =>
                {
                    b.HasOne("QLN.Common.DTO_s.ClassifiedsBo.StoreProducts", "StoreProduct")
                        .WithMany("Features")
                        .HasForeignKey("StoreProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreProduct");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.ProductImages", b =>
                {
                    b.HasOne("QLN.Common.DTO_s.ClassifiedsBo.StoreProducts", "StoreProduct")
                        .WithMany("Images")
                        .HasForeignKey("StoreProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreProduct");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.ProductPageCoordinates", b =>
                {
                    b.HasOne("QLN.Common.DTO_s.ClassifiedsBo.StoreProducts", "StoreProduct")
                        .WithOne("PageCoordinates")
                        .HasForeignKey("QLN.Common.DTO_s.ClassifiedsBo.ProductPageCoordinates", "StoreProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreProduct");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.StoreProducts", b =>
                {
                    b.HasOne("QLN.Common.DTO_s.ClassifiedsBo.StoreFlyers", "StoreFlyer")
                        .WithMany("Products")
                        .HasForeignKey("FlyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreFlyer");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.StoreFlyers", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QLN.Common.DTO_s.ClassifiedsBo.StoreProducts", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Images");

                    b.Navigation("PageCoordinates")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
