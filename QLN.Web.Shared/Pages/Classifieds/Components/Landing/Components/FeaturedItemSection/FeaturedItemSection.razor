@using MudBlazor
@using QLN.Web.Shared.Components.Classifieds.FeaturedItemCard


@if (FeaturedItems?.Any() != true)
{
    <MudText>No featured items found.</MudText>
}
else
{
    <div class="featured-cards-section">
        <div class="featured-header">
            <h3 class="featured-title">Featured Items</h3>
            <h4 class="featured-title-one">Donâ€™t miss out on these deals</h4>
        </div>

        <div class="carousel-container2">
            <MudIconButton Icon="@Icons.Material.Filled.ChevronLeft" Disabled="@(_startIndex == 0)" OnClick="MovePrevious"
                Class="arrow-button left" />

            <div class="carousel-wrapper">
                <div class="carousel-trackerack" style="transform: @TrackOffset">
                    @foreach (var item in FeaturedItems)
                    {
                        <div class="carousel-card">
                            <FeaturedItemCard Item="item" OnHeartClick="HandleHeartClick" />
                        </div>
                    }
                </div>
            </div>

            <MudIconButton Icon="@Icons.Material.Filled.ChevronRight" Disabled="@(_startIndex >= MaxIndex)"
                OnClick="MoveNext" Class="arrow-button right" />
        </div>

        <div class="pagination-dots">
            @for (int i = 0; i <= MaxIndex; i++)
            {
                <span class="dot @(i == _startIndex ? "active" : "")"></span>
            }
        </div>
    </div>
}

@code {
    private int _startIndex = 0;
    private int VisibleCount => isMobile ? 1 : 4;
    private bool isMobile => windowWidth <= 768;
    private int MaxIndex => FeaturedItems.Count - VisibleCount;

    private int windowWidth;

    [Parameter]
    public List<FeaturedItemCard.FeaturedItem> FeaturedItems { get; set; } = new();

    private string TrackOffset => $"translateX(-{_startIndex * (100 / VisibleCount)}%)";

    private void MoveNext()
    {
        if (_startIndex < MaxIndex)
            _startIndex++;
    }

    private void MovePrevious()
    {
        if (_startIndex > 0)
            _startIndex--;
    }

    private void GoToPage(int index)
    {
        _startIndex = index;
    }

    private void HandleHeartClick(FeaturedItemCard.FeaturedItem item)
    {
        Console.WriteLine($"Heart clicked for {item.Title}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            windowWidth = await JSRuntime.InvokeAsync<int>("getWindowWidth");
            StateHasChanged();
        }
    }

    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;
}


<style>
    .featured-cards-section {
        padding: 2rem 0rem;
        position: relative;
        font-family: 'Public Sans', sans-serif;
    }

    .featured-header {
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
    }

    .featured-title {
        font-weight: 600;
        font-size: 25px;
        color: var(--color-text-heading);
    }

    .featured-title-one {
        font-weight: 400;
        font-size: 15px;
        color: var(--color-text-heading);
    }

    .carousel-container2 {
        position: relative;
        display: flex;
        align-items: center;
        overflow: hidden;
        width: 100%;
    }

    .carousel-wrapper {
        overflow: hidden;
        width: 100%;
    }

    .carousel-trackerack {
        display: flex;
        transition: transform 0.5s ease;
        will-change: transform;
    }

    .carousel-card {
        flex: 0 0 25%;
        max-width: 25%;
        padding: 0.5rem;
        box-sizing: border-box;
    }

    .arrow-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        z-index: 1;
        width: 40px;
        height: 40px;
        background-color: white;
        border-radius: 50%;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    .arrow-button.left {
        left: 20px;
        top: 35%;
    }

    .arrow-button.right {
        right: 20px;
        top: 35%;
    }

    .pagination-dots {
        display: flex;
        justify-content: center;
        margin-top: 1rem;
    }

    .pagination-dots .dot {
        height: 10px;
        width: 10px;
        margin: 0 5px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .pagination-dots .dot.active {
        background-color: #333;
    }

    @@media (max-width: 768px) {
        .carousel-card {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .pagination-dots {
            display: none;
        }

        .arrow-button {
            display: none;
        }
    }
</style>