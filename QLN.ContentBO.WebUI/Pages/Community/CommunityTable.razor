@using QLN.ContentBO.WebUI.Models
@using QLN.ContentBO.WebUI.Components.TableSkeleton
@using QLN.ContentBO.WebUI.Components.EmptyCard
@using MudBlazor;
@using QLN.ContentBO.WebUI.Components.ConfirmationDialog
@typeparam TPost

@if (IsLoading)
{
    <TableSkeleton Rows="10" />
}
else if (Posts == null || Posts.Count == 0)
{
      <div class="empty-card-wrapper">
        <EmptyCard Title="No community found" Subtitle="Please check back later or explore other categories." />
    </div>
}
else
{
    <MudTable Items="Posts" Hover="true" Class="custom-table">
        <HeaderContent>
            <MudTh class="header-cell">Title</MudTh>
            <MudTh class="header-cell">Category</MudTh>
            <MudTh class="header-cell">User Name</MudTh>
            <MudTh class="header-cell">Date Created</MudTh>
            <MudTh class="header-cell">Actions</MudTh>
        </HeaderContent>
        <RowTemplate Context="context">
            <MudTd DataLabel="Title">
                <MudLink Href="#" Class="post-title">@context.Title</MudLink>
            </MudTd>
            <MudTd DataLabel="Category">@context.Category</MudTd>
            <MudTd DataLabel="User Name">@context.UserName</MudTd>
            <MudTd DataLabel="Date Created">@context.DateCreated.ToString("dd-MM-yyyy")</MudTd>
            <MudTd>
                <div class="custom-delete-button" @onclick="@(() => DeleteSlotHandler(context.Id))">
                    <img src="/qln-images/delete_icon.svg" alt="delete" class="action-icon-style" />
                </div>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    [Parameter]
    public List<CommunityPostDto> Posts { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }
       [Parameter]
    public string DeletingId { get; set; }

    [Parameter]
    public EventCallback<string> OnDelete { get; set; }
    [Inject] public IDialogService DialogService { get; set; }
   
   protected async Task DeleteSlotHandler(string id)
    {
        var parameters = new DialogParameters
        {
            { "Title", "Delete Confirmation" },
            { "Descrption", "Do you want to delete this Community?" },
            { "ButtonTitle", "Delete" },
              { "OnConfirmed", EventCallback.Factory.Create(this, async () =>
                {
                    await OnDelete.InvokeAsync(id);
                })
            }
        };
        var options = new DialogOptions { CloseButton = false, MaxWidth = MaxWidth.Small, FullWidth = true };
        var dialog = DialogService.Show<ConfirmationDialog>("", parameters, options);
        var result = await dialog.Result;
    }

}


<style>
    /* Table header style */
.custom-table .header-cell {
    background-color: #FAFAFA;
    font-weight: 600;
    font-family: 'Public Sans', sans-serif;
}

/* Centered bold number column */
.custom-table .number-cell {
    text-align: center;
    font-weight: bold;
}
 .custom-delete-button {
        background-color: #F44336; /* Material red */
        border-radius: 12px; /* soft rounded */
        padding: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        cursor: pointer;
    }
/* Post title styling */
.custom-table .post-title {
    color: var(--color-background-grey) !important;
    text-decoration: none;
    font-size: 14px;
    font-weight: 400;
}

.custom-table .post-title:hover {
    color: #1976d2 !important; /* Material blue */
    text-decoration: underline;
}

/* Delete icon style */
.action-icon-style {
    cursor: pointer;
    width: 24px;
    height: 24px;
}

</style>