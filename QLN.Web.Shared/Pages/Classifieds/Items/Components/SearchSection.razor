@inherits SearchSectionBase
@inject SearchStateService SearchState
@using MudBlazor
@using QLN.Web.Shared.Components.ViewToggleButtons
@using QLN.Web.Shared.Components.NewCustomSelect
@using QLN.Web.Shared.Components.CustomSelectCategory
@using QLN.Web.Shared.Components.PriceRangeSelect
@using QLN.Web.Shared.Components.MoreFilters
@using QLN.Web.Shared.Helpers

<div Class="search-container">
    <div class="search-row">

        <!-- Search Input -->
        <div class="search-bar" @onfocusin="() => _isSearchFocused = true" @onfocusout="() => _isSearchFocused = false">
            <!-- Left icon (only visible when not focused) -->
            @if (!_isSearchFocused)
            {
                <div class="search-icon-left">
                     <img src="/qln-images/classifieds/iteam_search_icon.svg" alt="Search-left" class="action-icon-img-left" />
                </div>
            }

            <!-- Search input -->
            <input id="itemSearch" type="text" class="search-input" placeholder="Search..." @bind="_searchText" @bind:event="oninput" />

            <!-- Right actions (clear and search buttons) -->
            @if (!string.IsNullOrWhiteSpace(_searchText))
            {
                <div class="search-actions">
                    <MudIconButton OnClick="PerformSearch" Class="search-action-btn search-btn">
                        <div class="search-icon-container">
                            @if (_isSearching)
                            {
                                <MudProgressCircular Indeterminate="true" Style="color: white;width: 20px; height: 20px;" />
                            }
                            else
                            {
                                <img src="/qln-images/classifieds/search_icon.svg" alt="Search" class="action-icon-img" />
                            }
                        </div>
                    </MudIconButton>
                    <MudIconButton Icon="@Icons.Material.Filled.Close" Size="Size.Small" OnClick="ClearSearch"
                        Class="search-action-btn" />
                </div>
            }
        </div>

        @if (!_isSearchFocused)
        {
            <!-- Category -->
            <div class="short-select">
                 <CustomSelectCategory TItem="CategoryItem"
                     Items="@_categories"
                     SelectedId="@_category"
                     SelectedIdChanged="value => OnFilterChanged(nameof(_category), value)"
                     GetId="x => x.Id"
                     GetLabel="x => x.Label"
                     Placeholder="Category"
                     BorderRadius="4px"
                     Padding="13px 10px" />
            </div>

            <!-- Brand -->
            <div class="short-select">
                 <NewCustomSelect TItem="BrandItem"
                     Items="@_brands"
                     SelectedId="@_brand"
                     SelectedIdChanged="value => OnFilterChanged(nameof(_brand), value)"
                     GetId="x => x.Id"
                     GetLabel="x => x.Label"
                     Placeholder="Brand"
                     Padding="13px 10px"
                     BorderRadius="4px"
                     IsDisabled="@string.IsNullOrWhiteSpace(_category)" />
            </div>

            <!-- Price -->
            <div class="short-select">
                <PriceRangeSelect SelectedMin="@SelectedMin" SelectedMax="@SelectedMax"
                    SelectedMinChanged="@((value) => SelectedMin = value)"
                    SelectedMaxChanged="@((value) => SelectedMax = value)" OnApplyClicked="@ApplyPriceFilter"
                    OnResetClicked="@ResetPriceFilter" IsDisabled="@string.IsNullOrWhiteSpace(_category)" />
            </div>

            <!-- More -->
            <div class="short-select">

                <MoreFilters />
            </div>


            <!-- Save Search -->
            <div class="save-search">
                <button class="save-search-btn">Save Search</button>
            </div>
        }


        <!-- View Toggle Buttons -->
        <div class="right-actions">
            <ViewToggleButtons Items="@_viewOptions" SelectedValue="@_selectedView" OnSelected="SetViewMode" />
        </div>
    </div>
</div>

<style>
    .search-container {
        width: 100%;
        background-color: #f9f9f9;
        padding: 12px 40px;
        border-radius: 6px;
    }

    /* Main layout row */
    .search-row {
        display: flex;
        flex-wrap: nowrap;
        gap: 8px;
        flex-direction: row;
        align-items: center;
        width: 100%;
    }

    .search-bar {
        display: flex;
        align-items: center;
        gap: 8px;
        width: 270px;
        background-color: white;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 8px 12px;
        transition: width 0.3s ease;
    }

    .search-bar:focus-within {
        width: 100%;
    }

    /* Search input */
    .search-input {
        flex: 1;
        border: none;
        outline: none;
        font-size: 14px;
        padding: 6px 0;
        min-width: 0;
        /* Prevent flex overflow */
    }

    /* Left icon */
    .search-icon-left {
        display: flex;
        align-items: center;
        color: #888;
    }

    /* Right actions container */
    .search-actions {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 4px;
        margin-left: auto;
    }

    .search-btn {
        padding: 1px 8px;
        min-width: auto;
        background: linear-gradient(90deg, #0A426B 0%, #35B7EF 100%);
        border-radius: 50px;
        width: 32px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
    }

    .search-icon-container {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
    }

    .action-icon-img {
        width: 16px;
        height: 16px;
        filter: brightness(0) invert(1);
        /* Makes the icon white */
    }
    .action-icon-img-left{
          width: 20px;
        height: 20px;
    }

    .search-btn:hover {
        background: linear-gradient(90deg, #0A426B 0%, #35B7EF 80%);
        transform: scale(1.05);
    }

    .search-btn:active {
        transform: scale(0.95);
    }

    /* Dropdowns / Selects */
    .short-select {
        display: flex;
        align-items: center;
        width: 165.5px;
    }

    /* More button */
    .more-button {
        background-color: #fff;
        border: 1px solid #ccc;
        padding: 12px 10px;
        min-height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 4px;
    }

    .more-icon {
        font-size: 20px;
    }

    .save-search {
        display: flex;
        align-items: center;
        width: 115px;
    }

    /* Save Search */
    .save-search-btn {
        font-size: 14px;
        font-weight: 500;
        color: #f67218;
        background: none;
        border: none;
        cursor: pointer;
        padding: 4px 8px;
        text-transform: capitalize;
    }

    /* Right-side container: Save Search + Toggle buttons */
    .right-actions {
        margin-left: auto;
        display: flex;
        align-items: center;
        gap: 8px;
        width: 174px;
    }

    /* Optional: responsive tweaks */
    @@media (max-width: 992px) {
        .search-row {
            flex-wrap: wrap;
            gap: 12px;
        }

        .right-actions {
            width: 100%;
            justify-content: flex-end;
            margin-left: 0;
        }

        .search-bar {
            width: 100%;
        }

        .short-select {
            width: 100%;
        }
    }
</style>
