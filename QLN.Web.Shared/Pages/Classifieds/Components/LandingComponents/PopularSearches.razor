@using MudBlazor

<div class="ps-section">
    <MudText Typo="Typo.h6" Class="ps-title">Popular searches</MudText>

    @foreach (var faq in faqs)
    {
        <MudPaper Class="@($"ps-item {(faq.Expanded ? "expanded" : "")}")" Elevation="0">
            <MudButton Variant="Variant.Text"
                       FullWidth="true"
                       Class="@($"ps-question {(faq.Expanded ? "expanded" : "")}")"
                       EndIcon="@(faq.Expanded ? Icons.Material.Filled.ExpandLess : Icons.Material.Filled.ExpandMore)"
                       OnClick="@(() => ToggleFaq(faq))">
                <MudText Typo="Typo.subtitle1">@faq.Question</MudText>
            </MudButton>

            <MudCollapse Expanded="@faq.Expanded">
                <div class="ps-columns">
                    @foreach (var location in faq.AnswerList)
                    {
                        <MudLink Href="#" Class="ps-link">@location</MudLink>
                    }
                </div>
            </MudCollapse>
        </MudPaper>
    }
</div>

<style>
    .ps-section {
        padding: 2rem 1rem;
        background-color: var(--color-secondary-background);
    }

    .ps-title {
        font-weight: 600;
        color:var(--color-text-secondary);
        margin-bottom: 2rem;
        text-align: center;
    }

    .ps-item {
        margin-bottom: 8px;
        border-radius: 4px;
        overflow: hidden;
        background-color: var(--color-secondary-background);
        transition: background-color 0.3s ease;
    }

    .ps-item.expanded {
        background-color: var(--color-secondary-background);
    }

    .ps-question {
        padding: 1rem;
        justify-content: space-between;
        text-transform: none;
        color: var(--color-text-secondary);
        background-color: transparent;
        transition: background-color 0.3s ease;
    }

    .ps-question:hover,
    .ps-question.expanded {
        background-color: var(--color-background-secondary-grey);
    }

    .ps-columns {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        padding: 1rem 1.5rem;
        gap: 0.5rem 2rem;
        background-color: var(--color-secondary-background);
    }

    .ps-link {
        font-size: 0.9rem;
        color: #004080;
        text-decoration: none;
    }

    .ps-link:hover {
        text-decoration: underline;
    }

    @@media (max-width: 768px) {
        .ps-columns {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 480px) {
        .ps-columns {
            grid-template-columns: 1fr;
        }
    }
</style>

@code {
    private List<FAQItem> faqs = new()
    {
        new FAQItem {
            Question = "Search for apartments by location",
            Expanded = false,
            AnswerList = new()
            {
                "Apartments for rent in Doha", "Apartments for rent in Fox Hills", "Apartments for rent in Al Sadd",
                "Apartments for rent in Lusail", "Apartments for rent in Viva Bahriya", "Apartments for rent in Al aziziyah",
                "Apartments for rent in Porto Arabia", "Apartments for rent in West Bay", "Apartments for rent in Lusail"
            }
        },
        new FAQItem {
            Question = "Search for villas by location",
            Expanded = false,
            AnswerList = new() { "Villas in Doha", "Villas in Al Wakrah", "Villas in Lusail" }
        },
        new FAQItem {
            Question = "Search for compounds by location",
            Expanded = false,
            AnswerList = new() { "Compounds in West Bay", "Compounds in Pearl", "Compounds in Lusail" }
        }
    };

    private void ToggleFaq(FAQItem faq)
    {
        faq.Expanded = !faq.Expanded;
    }

    public class FAQItem
    {
        public string Question { get; set; }
        public List<string> AnswerList { get; set; }
        public bool Expanded { get; set; }
    }
}
