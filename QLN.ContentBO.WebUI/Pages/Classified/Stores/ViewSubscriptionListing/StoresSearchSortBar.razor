@using MudBlazor
@inherits StoresSearchSortBarBase
@using QLN.ContentBO.WebUI.Components.NewCustomSelect

<div>
    <div class="search-sort-container">
        <div class="left-section">
            <div class="search-wrapper">
                <img src="/qln-images/search_icon.svg" alt="search" class="search-icon" />
                <input type="text"
                       placeholder="Search for Items"
                       class="search-input"
                       @oninput="OnSearchChanged" />
            </div>
        </div>

        <div class="right-section">
            <button class="sort-button">
                <img src="/qln-images/file_icon.svg" />
                Export data
            </button>
            <button class="sort-button" @onclick="ToggleSort">
                <MudIcon Icon="@SortIcon" />
                Sort by
            </button>
        </div>
    </div>

    <!-- Filter row -->
    <div class="filter-row">
      <div class="subscription-types">
       <NewCustomSelect TItem="string"
                    Items="SubscriptionTypes"
                    SelectedId="@SelectedSubscriptionType"
                    SelectedIdChanged="OnSubscriptionChanged"
                    GetId="item => item"
                    GetLabel="item => item"
                    Placeholder="Subscription type" />
        </div>
        <div class="custom-date-picker-container @(showDatePopover ? "active" : "")" @onclick="ToggleDatePopover">
        <div class="label-and-value">
        <div class="custom-label">Dates</div>
        <div class="custom-value">
            @if (_dateRange.Start.HasValue && _dateRange.End.HasValue)
            {
                 <text>@_dateRange.Start.Value.ToString("dd MMM yyyy") - @_dateRange.End.Value.ToString("dd MMM yyyy")</text>
            }
            else
            {
                <span class="date-placeholder">Choose</span>
            }
        </div>
    </div>
    <MudIcon Icon="@(showDatePopover ? Icons.Material.Filled.KeyboardArrowUp : Icons.Material.Filled.KeyboardArrowDown)"
             Class="custom-date-icon" />
              <MudPopover Open="@showDatePopover"
                    AnchorOrigin="Origin.BottomCenter"
                    TransformOrigin="Origin.TopCenter"
                    Elevation="6"
                    Class="popover-container"
                    Style="padding:0;">
            <div class="custom-range-picker-container">
                <!-- Left: Calendar -->
                <div class="range-calendar">
                    <MudDateRangePicker 
                        @bind-DateRange="_tempDateRange"
                        PickerVariant="PickerVariant.Static"
                        DisableToolbar="true"
                        ShowToolbar="false"
                        DisplayMonths="1"
                        Class="event-custom-date-range"
                        Style="min-width: 300px;" 
                    />
                </div>
                <!-- Right: Range Info + Controls -->
                <div class="range-sidebar">
                <div class="range-header-col">
                        <span class="date-value">
                            @( _tempDateRange?.Start?.ToString("dd MMM yyyy") ?? "Start date" )
                        </span>
                        <span class="date-value">
                            @( _tempDateRange?.End?.ToString("dd MMM yyyy") ?? "End date" )
                       </span>
                </div>
                    <div class="range-footer">
                        <MudButton Variant="Variant.Filled" Class="popover-button" OnClick="CancelDatePopover">Cancel</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="popover-button" OnClick="ApplyDatePopover">Apply</MudButton>
                    </div>
                </div>
            </div>
        </MudPopover>
</div>


 
        <button class="filter-button" @onclick="ClearFilters">Clear Filters</button>
    </div>

</div>
<style>
.search-sort-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    margin-bottom: 16px;
}

.left-section {
    display: flex;
    align-items: center;
    gap: 16px;
}
.right-section {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 16px;
}

.search-wrapper {
    display: flex;
    align-items: center;
    background-color: #fff;
    border: 1px solid var(--color-secondary-grey-container);
    border-radius: 8px;
    padding: 10px 14px;
    width: 300px;
    height: 44px;
}

.search-wrapper:focus-within {
    border-color: var(--color-accent);
}

.search-icon {
    width: 20px;
    height: 20px;
    margin-right: 8px;
    color: #A1A1A1;
}

.search-input {
    border: none;
    outline: none;
    width: 100%;
    font-size: 14px;
    color: #333;
}

.sort-button {
    display: flex;
    align-items: center;
    gap: 4px;
    border: 1px solid var(--color-secondary-grey-container);
    border-radius: 8px;
    background: #fff;
    padding: 6px 14px;
    height: 44px;
    cursor: pointer;
    font-size: 14px;
    color: var(--color-text-descripton);
    font-weight: 500;
}

.sort-button:hover {
    border-color: var(--color-accent);
    color: var(--color-accent);
}
.filter-row {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-top: 8px;
}
.filter-button {
    display: flex;
    align-items: center;
    gap: 8px;
    border: 1px solid var(--color-secondary-grey-container);
    border-radius: 8px;
    padding: 6px 14px;
    height: 44px;
    font-size: 14px;
    cursor: pointer;
    background-color: white;
    color: #333;
}

    .subscription-types {
        min-width: 230px;
    }
 .custom-range-picker-container {
        display: flex;
        flex-direction: row;
        min-width: 480px;
        border-radius: 8px;
        overflow: hidden;
    }
    .range-calendar {
        border-right: 1px solid #f0f0f0;
        padding: 12px 12px 12px 0;
        background: #fff;
    }
    .range-header-col {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 8px;
        align-items: flex-start;
        width: 100%;
    }

    .date-value {
        font-size: 14px;
        color: var(--color-text-heading);
        font-weight: 500;
        border: 1px solid var(--color-captcha-box);
        padding: 6px 16px;
        border-radius: 6px;
        width: 100%;
        text-align: left;
        box-shadow: 0px 1px 2px 0px #1018280D;
    }

    .range-sidebar {
        min-width: 160px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 14px 10px;
        background: #fff;
    }
    .range-header {
        display: flex;
        flex-direction: column;
        margin-bottom: 12px;
    }
    .range-footer {
        display: flex;
        gap: 8px;
        flex-direction: column;
        justify-content: flex-end;
        margin-top: 20px;
    }
   .custom-date-picker-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 8px;
    border: 1px solid var(--color-secondary-grey-container);
    border-radius: 8px;
    padding: 3px 12px;
    background-color: #fff;
    min-height: 48px;
    min-width: 230px;
    cursor: pointer;
    transition: border-color 0.3s;
}

.custom-date-picker-container.active {
    border-color: var(--color-accent);
}

.label-and-value {
    display: flex;
    flex-direction: column;
    flex: 1;
}

.custom-label {
    font-size: 12px;
    color: #7C7C7C; /* light grey */
    font-weight: 500;
}

.custom-value {
    font-size: 14px;
    color: #333;
}

.date-placeholder {
    color: #999;
}

.custom-date-icon {
    color: #666;
    font-size: 20px;
}


</style>
