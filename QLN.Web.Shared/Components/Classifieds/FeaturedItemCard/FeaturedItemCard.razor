@* FeaturedItemCard.razor *@
@using MudBlazor

<div class="card">
    @if (Item.IsFeatured)
    {
        <div class="featured-badge">
            <MudIcon Icon="@Icons.Material.Filled.FlashOn" Size="Size.Small" Class="featured-icon" />
            <span>Featured</span>
        </div>
    }
    <MudIconButton Icon="@(isFavorite? Icons.Material.Filled.Favorite : Icons.Material.Outlined.FavoriteBorder)"
        Color="@(isFavorite? Color.Error: Color.Inherit)" OnClick="@(() => HandleHeartClick(Item))"
        Class="@heartIconClass" />
    <img src="@Item.ImageUrl" alt="@Item.Title" class="card-image">
    <div class="card-content">
        <div class="category">@Item.Category</div>
        <div class="price">@Item.Price QAR</div>
        <h3 class="title">@Item.Title</h3>
        <div class="location">
            <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" />
            @Item.Location
        </div>
    </div>
</div>

<style>
    .card {
        position: relative;
        border-radius: 6px;
        overflow: hidden;
        background: #fff;
        font-family: 'Public Sans', sans-serif;
        transition: transform 0.3s ease;
        flex: 1 1 auto;
        max-width: 100%;
        height: 100%;
        min-height: 318px;
    }

    .card:hover {
        transform: translateY(-5px);
    }

    .featured-badge {
        position: absolute;
        top: 10px;
        left: 0px;
        background-color: #FF7F38;
        color: white;
        padding: 4px 6px;
        border-radius: 2px;
        font-size: 11px;
        font-weight: 500;
        z-index: 2;
        display: flex;
        align-items: center;
        gap: 2px;
    }

    .featured-icon {
        font-size: 14px;
    }

    .heart-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border: none;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        z-index: 2;
        padding: 0;
        transition: all 0.2s ease;
        color: #FF7F38;
        /* Default gray color for unfavorited */
    }


    .heart-icon.filled {
        color: #FF7F38 !important;
        background: white !important;
    }

    .heart-icon.outlined {
        color: #FF7F38 !important;
        background: white !important;
    }

    .card-image {
        width: 100%;
        height: 180px;
        object-fit: cover;
    }

    .card-content {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 15px;
    }

    .category {
        font-size: 11px;
        color: #646464;
        font-weight: 500;
        margin-bottom: 5px;
    }

    .price {
        font-weight: 600;
        font-size: 20px;
        margin-bottom: 8px;
    }

    .title {
        font-size: 14px;
        font-weight: 500;
        color: #242424;
        margin: 8px 0;
        line-height: 1.3;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        /* limit to 2 lines */
        -webkit-box-orient: vertical;
    }

    .title:hover {
        color: #00426D;
    }

    .location {
        font-size: 12px;
        font-weight: 500;
        color: ##646464;
        margin-top: 8px;
        display: flex;
        align-items: center;
        gap: 6px;
    }
</style>

@code {
    public class FeaturedItem
    {
        public string ImageUrl { get; set; } = string.Empty;
        public string Category { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public string Price { get; set; } = string.Empty;
        public string Location { get; set; } = string.Empty;
        public bool IsFeatured { get; set; }
    }

    [Parameter]
    public FeaturedItem Item { get; set; } = new();

    [Parameter]
    public EventCallback<FeaturedItem> OnHeartClick { get; set; }

    private bool isFavorite = false;
    private string heartIconClass => isFavorite ? "heart-icon filled" : "heart-icon outlined";

    private async Task HandleHeartClick(FeaturedItem item)
    {
        isFavorite = !isFavorite;
        await OnHeartClick.InvokeAsync(item);
    }
}