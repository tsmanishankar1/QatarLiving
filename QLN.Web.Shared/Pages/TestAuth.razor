@page "/testauth"
@using System.Security.Claims
@using QLN.Web.Shared.Services
@using System.Net.Http.Headers

@inject CookieAuthStateProvider CookieAuthenticationStateProvider;

@inject ApiService apiService;


<h3>Test Auth</h3>

@{
    if (user.Identity.IsAuthenticated)
    {
        <p>User @(user.Identity.Name) is authenticated.</p>
        <br/>
        <button onclick="@DoSomething">Test Get</button>
        if (GetResult != null)
        {
            <p>@(GetResult)</p>
        }
        <br />
        <button onclick="@PostSomething">Test Post</button>

        if (PostResult != null)
        {
            <p>@(PostResult)</p>
        }
    }
    else
    {
        <p>User is NOT authenticated.</p>
    }
}


@code {
    private ClaimsPrincipal user;

    private string? GetResult;
    private string? PostResult;

    private async Task DoSomething()
    {
        try
        {
            var response = await apiService.GetAsync("testauth");
            GetResult = response;
        }
        catch (Exception)
        {
            throw;
        }
        
    }

    private async Task PostSomething()
    {
        try
        {
            var response = await apiService.PostAsync("testauth");
            PostResult = response;
        }
        catch (Exception)
        {
            throw;
        }

    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await CookieAuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState != null)
        {
            user = authState.User;
        }
    }
}