@using QLN.ContentBO.WebUI.Components.PhoneNumberInput;
@using QLN.ContentBO.WebUI.Models;
@using PSC.Blazor.Components.MarkdownEditor.Enums
@inherits EditFormListBase

<div class="create-form-list">
    <EditForm Model="Company" OnValidSubmit="SubmitForm">
        <DataAnnotationsValidator />
        <MudTextField Class="white-bg mt-4" Variant="Variant.Outlined" T="string" Label="Company Name"
                      @bind-Value="Company.CompanyName" For="@(() => Company.CompanyName)" FullWidth="true" />

        <MudSelect T="string"
                   Class="white-bg mt-2"
                   Label="Select Country"
                   Variant="Variant.Outlined"
                   Value="@selectedCountry"
                   ValueChanged="OnCountryChanged"
                   Searchable="true"
                   SearchFunc="@((string searchTerm) =>
                                  countries
                                      .Where(c => string.IsNullOrWhiteSpace(searchTerm)
                                               || c.Country_Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                                      .Select(c => c.Country_Name)
                      )">
            @foreach (var country in countries)
            {
                <MudSelectItem Value="@country.Country_Name">@country.Country_Name</MudSelectItem>
            }
        </MudSelect>

        <MudSelect Class="white-bg mt-2" T="string" Variant="Variant.Outlined" Label="Select City" Value="@selectedCity" Disabled="@(!filteredCities.Any())">
            @foreach (var city in filteredCities)
            {
                <MudSelectItem Value="@city.City">@city.City</MudSelectItem>
            }
        </MudSelect>




        <MudFileUpload T="IBrowserFile" Accept="image/png,image/jpeg" Class="py-3"
                       OnFilesChanged="@(e => HandleFilesChanged(e))" MaximumFileCount="1">
            <ActivatorContent>
                <div class="cover-upload-wrapper">
                    <div class="cover-upload-box">
                        @if (!string.IsNullOrEmpty(tempCoverImage))
                        {
                            <img src="@tempCoverImage" alt="Cover Image Preview" class="cover-image-preview" />
                        }
                        else
                        {
                            <div class="upload-placeholder">
                                <img src="/qln-images/upload_icon.svg" alt="Upload" class="upload-icon" />
                            </div>
                            <MudText Class="upload-text">Upload image</MudText>
                        }

                        @if (!string.IsNullOrEmpty(tempCoverImage))
                        {
                            <div class="cover-logo-overlay">
                                <MudIconButton Class="logo-action">
                                    <img src="/qln-images/edit_icon.svg" alt="Edit" class="event-action-icon-style" />
                                </MudIconButton>
                                <MudIconButton Class="logo-action" OnClick="RemoveCoverImage">

                                    <img src="/qln-images/delete_icon.svg" alt="delete" class="event-action-icon-style" />
                                </MudIconButton>
                            </div>
                        }
                    </div>
                </div>
            </ActivatorContent>
        </MudFileUpload>


        <div class="form-group mt-2">
            <!-- Phone -->
            <PhoneNumberInput DefaultCountryCode="@Company.PhoneNumberCountryCode"
                              SelectedCountry="@SelectedPhoneCountry" Placeholder="Phone Number*"
                              SelectedCountryChanged="@OnPhoneCountryChanged" PhoneNumber="@Company.PhoneNumber"
                              PhoneNumberChanged="@OnPhoneChanged" />
        </div>
        <div class="form-group mt-2">
            <!-- WhatsApp -->
            <PhoneNumberInput DefaultCountryCode="@Company.WhatsAppCountryCode"
                              SelectedCountry="@SelectedWhatsappCountry" Placeholder="WhatsApp Number"
                              SelectedCountryChanged="@OnWhatsappCountryChanged" PhoneNumber="@Company.WhatsAppNumber"
                              PhoneNumberChanged="@OnWhatsappChanged" />
        </div>
        <MudTextField Class="white-bg mt-2" Variant="Variant.Outlined" T="string" Label="Email"
                      @bind-Value="Company.Email" For="@(() => Company.Email)" FullWidth="true" />

        <MudTextField Class="white-bg mt-2" Variant="Variant.Outlined" T="string" Label="Website URL"
                      @bind-Value="Company.WebsiteUrl" For="@(() => Company.WebsiteUrl)" FullWidth="true" />

        <MudTextField Class="white-bg mt-2" Variant="Variant.Outlined" T="string" Label="Facebook URL"
                      @bind-Value="Company.FacebookUrl" For="@(() => Company.FacebookUrl)" FullWidth="true" />

        <MudTextField Class="white-bg mt-2" Variant="Variant.Outlined" T="string" Label="Instagram URL"
                      @bind-Value="Company.InstagramUrl" For="@(() => Company.InstagramUrl)" FullWidth="true" />

        <h3 class="form-heading form-padding">Operating Hours</h3>
        <MudGrid GutterSize="8px" Class="compact-grid">
            <MudItem xs="12" md="6">
                <MudSelect Label="Start day" @bind-Value="Company.StartDay" Class="white-bg" Variant="Variant.Outlined">
                    @foreach (var day in DaysOfWeek)
                    {
                        <MudSelectItem Value="@day">@day</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <!-- End Day -->
            <MudItem xs="12" md="6">
                <MudSelect Label="End day" @bind-Value="Company.EndDay" Class="white-bg" Variant="Variant.Outlined">
                    @foreach (var day in DaysOfWeek)
                    {
                        <MudSelectItem Value="@day">@day</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <!-- Start Hour -->
            <MudItem xs="12" md="6">
                <MudTimePicker Label="Start hour" @bind-Time="StartHourTime" Class="white-bg" Variant="Variant.Outlined"
                               AmPm="true" />
            </MudItem>

            <!-- End Hour -->
            <MudItem xs="12" md="6">
                <MudTimePicker Label="End hour" @bind-Time="EndHourTime" Class="white-bg" Variant="Variant.Outlined"
                               AmPm="true" />
            </MudItem>
        </MudGrid>

        @foreach (var field in CompanyProfileOptions)
        {
            <MudSelect T="int" Class="white-bg" Variant="Variant.Outlined" Label="@field.Key"
                       Value="@SelectedProfileValues[field.Key]"
                       ValueChanged="@(value => OnProfileValueChanged(field.Key, value))">
                @foreach (var option in field.Value)
                {
                    <MudSelectItem T="int" Value="@option.Value">@option.Label</MudSelectItem>
                }
            </MudSelect>
        }

        <MudSelect T="int"
                   Class="white-bg"
                   Variant="Variant.Outlined"
                   Label="Nature Of Business"
                   MultiSelection="true"
                   SelectedValues="Company.NatureOfBusiness"
                   SelectedValuesChanged="@(values => Company.NatureOfBusiness = values.ToList())"
                   ToStringFunc="@(id => NatureOfBusinessOptions.FirstOrDefault(x => x.Id == id)?.NameOfBusiness)">

            @foreach (var option in NatureOfBusinessOptions)
            {
                <MudSelectItem T="int" Value="@option.Id">@option.NameOfBusiness</MudSelectItem>
            }
        </MudSelect>

        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="string" Label="User Designation*"
                      @bind-Value="Company.UserDesignation" For="@(() => Company.UserDesignation)" FullWidth="true" />


        <MarkdownEditor @bind-Value="@Company.BusinessDescription" Placeholder="Start Typing" HideIcons="@HiddenIcons"
                        CustomButtonClicked="@OnCustomButtonClicked" @ref="MarkdownEditorRef">
            <Toolbar>
                <MarkdownToolbarButton Action="MarkdownAction.Bold" Icon="fa fa-bold" Title="Bold" />
                <MarkdownToolbarButton Action="MarkdownAction.Italic" Icon="fa fa-italic" Title="Italic" />
                <MarkdownToolbarButton Action="MarkdownAction.Heading" Icon="fa fa-header" Title="Heading" />
                <MarkdownToolbarButton Action="MarkdownAction.Strikethrough" Icon="fa fa-strikethrough"
                                       Title="Strikethrough" />

                <MarkdownToolbarButton Separator Action="MarkdownAction.Code" Icon="fa fa-code" Title="Code Block" />
                <MarkdownToolbarButton Action="MarkdownAction.Quote" Icon="fa fa-quote-right" Title="Quote" />
                <MarkdownToolbarButton Action="MarkdownAction.HorizontalRule" Icon="fa fa-minus"
                                       Title="Horizontal Rule" />
                <MarkdownToolbarButton Action="MarkdownAction.UnorderedList" Icon="fa fa-list-ul"
                                       Title="Unordered List" />
                <MarkdownToolbarButton Action="MarkdownAction.OrderedList" Icon="fa fa-list-ol" Title="Ordered List" />

                <MarkdownToolbarButton Separator Action="MarkdownAction.Link" Icon="fa fa-link" Title="Link" />
                <MarkdownToolbarButton Action="MarkdownAction.Custom" Name="@UploadImageButtonName" Icon="fa fa-upload"
                                       Title="Upload Image" />
                <MarkdownToolbarButton Action="MarkdownAction.Image" Icon="fa fa-image" Title="Image" />

                <MarkdownToolbarButton Separator Action="MarkdownAction.Custom" Name="CustomPreview"
                                       Icon="fa fa-eye no-disable" Title="Toggle Preview (Ctrl-P)" />
                <MarkdownToolbarButton Action="MarkdownAction.SideBySide" Icon="fa fa-columns no-disable no-mobile"
                                       Title="Side by Side" />
                <MarkdownToolbarButton Action="MarkdownAction.Guide" Icon="fa fa-question-circle"
                                       Title="Markdown Guide" />
            </Toolbar>
        </MarkdownEditor>
        <MudText Typo="Typo.caption" Color="Color.Error">
            <ValidationMessage For="@(() => Company.BusinessDescription)" />
        </MudText>
        <h3 class="form-heading">License & Visibility</h3>
        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="long" Label="CR Number"
                      @bind-Value="Company.CrNumber" For="@(() => Company.CrNumber)" FullWidth="true" />
        <MudPaper Class="catification-upload-section">
            <div class="catification-upload-info">
                <h3 class="catification-upload-label">Certificate / Warranty*</h3>

                @if (!string.IsNullOrEmpty(Company.TherapeuticCertificate))
                {
                    <div class="catification-file-info">
                        <span class="catification-file-name">
                            @ShortFileName(Company.TherapeuticCertificate, 10)
                        </span>
                        <MudIconButton Icon="@Icons.Material.Outlined.Close" Size="Size.Small" Color="Color.Error"
                                       OnClick="ClearFile" />
                    </div>
                }
            </div>

            <MudFileUpload T="IBrowserFile" Accept=".pdf,.png,.jpg,.jpeg" MaxFileSize="10485760"
                           FilesChanged="OnCrFileSelected">
                <ActivatorContent>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="catification-upload-button">
                        Upload
                        <img src="/qln-images/upload_white_icon.svg" width="20" height="20" />
                    </MudButton>
                </ActivatorContent>
            </MudFileUpload>
        </MudPaper>
        <MudText Typo="Typo.caption">Supported file formats: PDF, PNG, JPG. Max: 10MB</MudText>



        <MudStack Row Justify="Justify.SpaceBetween" Class="mt-4" Style="width:100%">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit" OnClick="SubmitForm" Style="width:100%">
                Submit
            </MudButton>
        </MudStack>
    </EditForm>
</div>
