@page "/content/events/create"
@inherits EventCreateFormBase;
<MudGrid Style="padding-top: 0">
    <!-- Left Form Section -->
    <MudItem xs="12" md="6">
        <MudPaper Class="pa-4 main-content-style" Elevation="0">
            <MudText Class="form-title">Event Form</MudText>
            <MudSelect Variant="Variant.Outlined" T="string" Label="Category"  @bind-Value="@Category" Class="my-2 custom-textfield">
            @foreach (var category in Categories)
            {
                <MudSelectItem Value="@category">@category</MudSelectItem>
            }
            </MudSelect>
            <MudTextField Variant="Variant.Outlined" Label="Event Title"  Class="my-2 custom-textfield" @bind-Value="@CurrentEvent.EventTitle"/>
            <MudRadioGroup T="EventType" @bind-Value="CurrentEvent.EventType" Class="my-2">
                <MudRadio T="EventType" Value="EventType.FreeAcess">Free Access</MudRadio>
                <MudRadio T="EventType" Value="EventType.OpenRegistrations">Open Registrations</MudRadio>
                <MudRadio T="EventType" Value="EventType.FeePrice">Fees</MudRadio>
            </MudRadioGroup>
            <MudTextField T="int?" 
              Variant="Variant.Outlined" 
              Label="Price" 
              @bind-Value="CurrentEvent.Price" 
              Adornment="Adornment.End" 
              AdornmentText="QAR" 
              Class="@PriceFieldClass" 
              Disabled="@(!IsFeesSelected)" />
            <MudTextField  Variant="Variant.Outlined" Label="Redirection Link"  Class="my-2 custom-textfield" @bind-Value="@CurrentEvent.RedirectionLink"/>
            <MudPaper Class="location-box" Elevation="0" Style="display: flex; align-items: center; padding: 8px; border: 1px solid #ccc; border-radius: 8px; flex-wrap: wrap; gap: 8px;">
                <MudChipSet T="string" >
               @if (!string.IsNullOrWhiteSpace(Location))
                {
                    <MudChip T="string" Class="custom-chip">
                    @CurrentEvent.Location
                    <MudIconButton Icon="@Icons.Material.Filled.Close" 
                       Size="Size.Small" 
                       Edge="Edge.End"
                       Style="margin-left: 4px; color:#242424"
                       OnClick="@RemoveLocation" />
                    </MudChip>
                }
                </MudChipSet>
                <MudSpacer />
                <MudIcon Icon="@Icons.Material.Filled.LocationOn"  Style="cursor: pointer; color: #FF7F38" @onclick="AddLocation" />
            </MudPaper> 
            <MudTextField  Variant="Variant.Outlined" Label="Venu" Class="my-2 custom-textfield" @bind-Value="@CurrentEvent.Venue" />
            <div id="map" style="height: 300px; width: 100%;"></div>

            @* Date picker *@
            <div class="select-field date-picker-field" @onclick="ToggleDatePicker">
                <MudTextField Label="Date"
                Value="@SelectedDateLabel"
                ReadOnly="true"
                DisableUnderLine="true"
                Variant="Variant.Outlined"
                Class="cursor-pointer custom-textfield"
                Adornment="Adornment.End"
                AdornmentIcon="@Icons.Material.Filled.DateRange"
                OnClick="ToggleDatePicker" />
                <MudPopover Open="@_showDatePicker" AnchorOrigin="Origin.BottomCenter"
                    TransformOrigin="Origin.TopCenter" Elevation="6" Class="popover-container">
                    <div class="picker-overlay my-orange-theme" @ref="_popoverDiv">
                        <div style="display: flex; justify-content: space-between; gap: 24px; flex-wrap: wrap;">
                                <MudDateRangePicker @bind-DateRange="_dateRange"
                                PickerVariant="PickerVariant.Static"
                                DisableToolbar="true"
                                ShowToolbar="false"
                                DisplayMonths="1"
                                Class="custom-date-range"
                                Style="min-width: 300px;" />

                                <!-- Start and End Summary -->
                                <div style="display: flex; flex-direction: column; gap: 12px; min-width: 160px;">
                                    <div>
                                        <div class="summary-box">
                                            @( _dateRange?.Start != null ? _dateRange.Start?.ToString("dd-MM-yyyy") : "Start date" )
                                        </div>
                                    </div>
                                    <div>
                                        <div class="summary-box">
                                          @( _dateRange?.End != null ? _dateRange.End?.ToString("dd-MM-yyyy") : "End date" )
                                        </div>
                                    </div>
                                </div>
                        </div>

                        <!-- Actions -->
                        <div class="picker-actions" style="display: flex; justify-content: flex-end; gap: 8px;">
                            <button class="cancel-button" @onclick="CancelDatePicker">Cancel</button>
                            <button class="apply-button"
                                @onclick="ApplyDatePicker"
                                disabled="@(_dateRange?.Start == null && _dateRange?.End == null)">
                                Apply
                            </button>
                        </div>
                    </div>
                </MudPopover>
            </div>
            @if (_dateRange?.Start != null && _dateRange?.End != null)
            {
               <MudRadioGroup T="EventTimeType" @bind-Value="CurrentEvent.EventSchedule.TimeSlotType" Class="my-2">
                <MudRadio T="EventTimeType" Value="EventTimeType.GeneralTime">General time</MudRadio>
                <MudRadio T="EventTimeType" Value="EventTimeType.PerDayTime">Per day time</MudRadio>
                </MudRadioGroup>
            }
            @if (TimeType == "General time")
            {
                <MudTextField @bind-Value="GeneralTime"
                Label="Time"
                Placeholder="e.g. 9:00 AM to 5:00 PM"
                Variant="Variant.Outlined"
                Adornment="Adornment.End"
                AdornmentIcon="@Icons.Material.Filled.AccessTime"
                Class="mb-4 custom-textfield"
                Immediate="true" />
            }
            else if (TimeType == "Per day time")
            {
                @foreach (var entry in DayTimeList.Take(7))
                {
                    <MudPaper Elevation="0" Style="padding: 8px; margin-bottom: 12px; background-color: #FAFAFA; border-radius: 8px;">
                        <div style="display: flex; justify-content: space-between; align-items: center; width: 100%; gap: 12px;">
                            <MudCheckBox @bind-Checked="entry.IsSelected"
                             T="bool"
                             Style="min-width: 120px;" Class="my-checkbox">
                             @entry.Day
                            </MudCheckBox>
                            <MudTextField @bind-Value="entry.TimeRange"
                            Label="Time"
                            Placeholder="e.g. 2:00 PM to 6:00 PM"
                            Variant="Variant.Outlined"
                            Adornment="Adornment.End"
                            AdornmentIcon="@Icons.Material.Filled.AccessTime"
                            Immediate="true"
                            Class="custom-timefield"
                            Style="flex-grow: 1;" />
                        </div>
                    </MudPaper>
                }
            }
            <MudExRichTextEdit @ref="@Editor"
                                   Height="444"
                                   Class="m-2"
                                   Placeholder="Start Typing">
            </MudExRichTextEdit>
            <MudStack Row Class="mt-4" Justify="Justify.SpaceBetween">
                <MudButton FullWidth=true Variant="Variant.Outlined" Class="custom-close">Cancel</MudButton>
                <MudButton FullWidth=true Variant="Variant.Filled"   Class="custom-add" OnClick="@OpenDialogAsync">Save</MudButton>
            </MudStack>

        </MudPaper>
    </MudItem>

    <!-- Right Cover Image Section -->
    <MudItem xs="12" md="6">
    <MudPaper Class="pa-4 side-content-style" Elevation="0">
        <MudText Class="mb-2 form-title">Cover Image</MudText>
        <MudPaper Outlined Class="d-flex align-center justify-center cover-picker-style">
            <div class="d-flex flex-column align-center justify-center text-center image-container-style" >
                 @if (uploadedImage is null)
                {
                        <MudFileUpload T="IBrowserFile"
                        Accept=".png,.jpg"
                        FilesChanged="@(async f => await UploadFiles(f))"
                        MaximumFileCount="1">
                        <ActivatorContent>
                        <div class="d-flex flex-column align-center">
                        <div class="icon-circle">
                        <img src="/qln-images/upload_icon.svg"
                        class="file-upload-style"
                        alt="Upload"/>
                        </div>
                        <div class="mt-1" style="color: #FF7F38;">Cover Image</div>
                        </div>
                        </ActivatorContent>
                        </MudFileUpload>
                }
                else
                {
                    <div class="uploaded-image-container">
                    <img src="@uploadedImage"
                    alt="Cover"
                    class="uploaded-image-style"
                     />
                    </div>
                }
            </div>
            <MudPaper Elevation="0" Class="image-picker-style">
            <div class="upload-action-style">
                <MudFileUpload T="IBrowserFile"
                        Accept=".png,.jpg"
                        FilesChanged="@(async f => await UploadFiles(f))"
                        MaximumFileCount="1">
                        <ActivatorContent>
                        <MudButton 
                        OnClick="@EditImage">
                        <img src="/qln-images/edit_icon.svg" alt="Edit" class="action-icon-style" />
                        </MudButton>
                        </ActivatorContent>
                </MudFileUpload>
                <MudButton 
                OnClick="@EditImage">
                <img src="/qln-images/delete_icon.svg" alt="delete" class="action-icon-style" />
                </MudButton>
            </div>
        </MudPaper>
        </MudPaper>
    </MudPaper>
</MudItem>
</MudGrid>



<style>
    .form-title{
        font-family: 'Public Sans', sans-serif;
        font-size: 18px;
        font-weight: 600;
        color: #00426D;
        text-transform: none;
    }
    .custom-add {
        background-color: #FF7F38;
        font-family: 'Public Sans', sans-serif;
        font-size: 16px;
        font-weight: 600;
        color: white;
        text-transform: none;
    }
    .custom-close {
        border-color: #D5D7DA;
        color: #242424;
        text-transform: none;
    }
    .image-picker-style {
        background-color: #000000CC; 
        width: 100%; 
        height: 39px; 
    }
    .custom-textfield{
        background-color: #FFFFFF;
        border-radius: 6px; 
    }
    .custom-textfield .mud-input-root {
        border-radius: 8px;
    }
    .custom-timefield{
        max-width: 343px;
        background-color: #FFFFFF;
        border-radius: 6px; 
    }
    .price-field-style{
        background-color: #F2F4F7;
        border-radius: 6px;
    }
    .enable-field-style {
        background-color: #FFFFFF;
        border-radius: 6px;
    }
    .custom-border .mud-input-root.mud-disabled {
        border: 2px solid #EAECF0 !important;
        background-color: #F2F4F7 !important;
        opacity: 1 !important;
        color: #D35400;
    }

    
    .location-textfield .mud-input-adornment .mud-icon-root.mud-svg-icon {
        fill: #FF7F38 !important;
    }
    .custom-textfield label.mud-input-label {
        color: #787878 !important; 
    }
    .date-picker-style {
        background-color: #FFFFFF;
        border-radius: 6px;
    }
    .mud-picker-inline {
        display: block !important;
    }
    .iframe-style {
        width: 100%;
        height: 220px;
    }
    .main-content-style{
        background-color: #FAFAFA;
        gap: 16px
    }
    .side-content-style {
        background-color: #FAFAFA;
    }
    .cover-picker-style {
        background-color: #FFFFFF; 
        height: 174px; 
        display: flex; 
        flex-direction: column;
    }
    .custom-chip {
        background-color: #FAFAFA;
        color: #242424;
        border-radius: 4px !important;
        border: 1px solid #C0C0C0;
    }
    .image-container-style {
        width: 100%; 
        height: 170px;
    }
    .file-upload-style{
        width: 24px; 
        height: 24px;
    }
    .uploaded-image-container{
        width: 201px; 
        height: 113px; 
        overflow: hidden; 
        border-radius: 8px; 
        background-color: gray;
    }
    .uploaded-image-style{
        width: 100%; 
        object-fit: cover;
    }
    .upload-action-style{
        display: flex; 
        align-items: center; 
        justify-content: center; 
        height: 100%;
    }
    .action-icon-style{
        width: 20px;
        height: 20px;
    }
    .cursor-pointer {
        cursor: pointer;
    }
    .picker-overlay {
        background-color: white;
        border-radius: 20px;
        padding: 10px;
        box-sizing: border-box;
    }
    .my-orange-theme {

        .mud-picker-calendar .mud-day.mud-range-selection:hover,
        .mud-picker-calendar .mud-day.mud-range-end,
        .mud-picker-calendar .mud-day.mud-range-start:hover,
        .mud-picker-calendar .mud-day.mud-range.mud-range-between,
        .mud-picker-calendar .mud-day.mud-range-end:hover {
            background-color: #FF7F38 !important;
            color: white !important;
        }

        .mud-picker-calendar:nth-child(2) {
            display: none !important;
        }


        .mud-button-outlined.mud-button-outlined-primary {
            color: #FF7F38 !important;
            border-color: #FF7F38 !important;

        }

        .mud-button-outlined.mud-button-outlined-primary:hover {
            border-color: #FF7F38 !important;
            color: #FF7F38 !important;
        }


        .mud-button-filled.mud-button-filled-primary {
            background-color: #FF7F38 !important;
            color: white !important;
        }

        .mud-primary-text {
            color: #FF7F38 !important;
        }

        .mud-theme-primary {
            background-color: #FF7F38 !important;
            color: white !important;
        }
    }
    .summary-label {
    font-size: 14px;
    color: #555;
    margin-bottom: 4px;
    display: block;
}

.summary-box {
    border: 1px solid #D0D5DD;
    border-radius: 6px;
    padding: 10px 12px;
    background-color: #FFFFFF;
    font-size: 14px;
    font-weight: 500;
    min-height: 40px;
    font-family: 'Public Sans', sans-serif;
}

.cancel-button {
    padding: 8px 16px;
    background: #FFFFFF;
    border: 1px solid #E3E3E3;
    border-radius: 6px;
    font-size: 14px;
    cursor: pointer;
}

.apply-button {
    padding: 8px 16px;
    background: #FF7F38;
    color: white;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    cursor: pointer;
}

.apply-button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
}
.my-checkbox.mud-checkbox-root input[type="checkbox"]:checked + .mud-checkbox-ripple .mud-icon-root {
    color: #FF7F38 !important;
}

.my-checkbox.mud-checkbox-root input[type="checkbox"]:not(:checked) + .mud-checkbox-ripple .mud-icon-root {
    color: #D0D5DD !important;
}
.icon-circle {
    background-color: #FAFAFA;
    border-radius: 50%;
    width: 64px;
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
}

</style>

