@using MudBlazor
@using QLN.Common.DTO_s
@using QLN.Web.Shared.Components.Classifieds.ItemDetailsImage
@using QLN.Web.Shared.Pages.Classifieds.Items.Components.IteamdetailsSection
@using QLN.Web.Shared.Components.BreadCrumb
@inject NavigationManager NavigationManager

<Breadcrumb Items="breadcrumbItems" />
<div class="item-main-details">
      <div class="row-container">
        <div class="icon-label-container">
        <h3 class="title-item-name">@Item?.Title</h3>
        </div>
        <div class="icon-label-container">
            <div class="icon-label">
                <img src="/qln-images/classifieds/share.svg" alt="Share Icon" class="icon-image" />
                <span class="icon-text">Share</span>
            </div>
            <div id="saveButton" class="icon-label" @onclick="OnSaveClicked">
                <img src="@HeartIcon" alt="Save Icon" class="icon-image" />
                <span class="icon-text">@(isSaved ? "Saved" : "Save")</span>
            </div>
        </div>
    </div>

   <MudGrid Class="py-4" GutterSize="16px" >
    <!-- Main Content -->
    <MudItem xs="12" md="7">
            <ItemDetailsImage Item="Item" />
            <OverviewCard Item="Item" />
            <DescriptionBox />
        </MudItem>

         <MudItem xs="12" md="5">
             <div class="info-container">
            <div class="info-ad-container">
                <ItemInfo Item="Item" />
                <img src="/qln-images/classifieds/detail_ad.svg" alt="Product Image" class="main-image" />
            </div>
             <div class="info-side-container">
             <img src="/qln-images/classifieds/side_banner.svg" alt="Product Image" width="100%" />
                </div>
            </div>
        </MudItem>
    </MudGrid>
</div>

@code {
    private bool isSaved = false;
    private List<QLN.Web.Shared.Components.BreadCrumb.BreadcrumbItem> breadcrumbItems = new();
    private int _startIndex = 0;
    [Parameter] public ClassifiedsIndex Item { get; set; } = new();
    protected override void OnParametersSet()
    {
        if (Item == null)
        {
            throw new InvalidOperationException("Item is null. The component cannot render.");
        }
    }
    private int selectedImageIndex = 0;
    private string categorySegment = "items"; // Default

    protected override void OnInitialized()
    {
      

        breadcrumbItems = new()
{
new() { Label = "Classifieds", Url = "/qln/classifieds" },
new() { Label = "Items", Url = $"/qln/classifieds/items" },
new() { Label = Item?.Title ?? "Details", Url = "/qln/classifieds/items/details", IsLast = true }
};
    }

   


    private void OnSaveClicked()
    {
        isSaved = !isSaved;
    }
    private string HeartIcon => isSaved ? "qln-images/classifieds/liked_heart.svg" : "qln-images/classifieds/heart.svg";


}
<style>
    .item-main-details {
        width: 100%;
        font-family: 'Public Sans', sans-serif;
    }

    .row-container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
        width: 100%;
        max-width: 1090px;
    }

    .title-item-name {
        color: var(--color-text-heading);
        font-size: 25px;
        font-weight: 500;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
    }

    .icon-label-container {
        display: flex;
        gap: 2rem;
        align-items: center;
    }

    .icon-label {
        display: flex;
        align-items: center;
        cursor: pointer;
    }

    .icon-image {
        width: 18px;
        height: 18px;
    }

    .icon-text {
        margin-left: 0.5rem;
        color: var(--color-accent);
        font-family: 'Public Sans', sans-serif;
        font-size: 13px !important;
        font-weight: 500;
    }
    .info-container {
        display: flex;
        align-items: flex-start;
        flex-direction: row;
        width: 100%;
        gap: 10px;
    }
    .info-side-container{
        display: flex;
        align-items: flex-start;
        width: 100%;
    }
    .info-ad-container {
        display: flex;
        align-items: flex-start;
         width: 100%;
        flex-direction: column;
        gap: 1rem;
        justify-content: flex-start;
    }

    .main-image {
        width: 100%;
        height: 350px;
        object-fit: contain;
        border-radius: 8px;
    }
</style>
