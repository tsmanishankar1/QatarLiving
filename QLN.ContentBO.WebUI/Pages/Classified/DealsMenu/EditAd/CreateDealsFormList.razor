@inherits CreateDealsFormListBase
@using QLN.ContentBO.WebUI.Components.PhoneNumberInput;

<EditForm EditContext="@editContext" OnSubmit="@SubmitForm">
    <DataAnnotationsValidator />

     <div class="create-form-list">
        <h3 class="form-heading">Ad Category</h3>
 
       @* <h3 class="form-heading">Ad Information</h3> 
            <MudSelect T="string" Class="white-bg" Label="Sub Vertical" Variant="Variant.Outlined"
                Value="@Ad.SelectedCategoryId"
                ValueChanged="@OnCategoryChanged"
                For="@(() => Ad.SelectedCategoryId)"
                FullWidth="true">
          @*    @if (IsLoadingCategories)
            {
                  <MudSelectItem T="string" Value="@("__loading__")" Disabled="true">Loading...</MudSelectItem>
            }
            else
            {
                @foreach (var cat in CategoryTrees)
                {
                    <MudSelectItem T="string" Value="@cat.Id.ToString()">@cat.Name</MudSelectItem>
                }
            } *@
          @*   <MudSelectItem T="string" Value="@CategoryTrees.FirstOrDefault()?.Id.ToString()">Deals</MudSelectItem>

        </MudSelect>  *@

        <MudSelect T="string"
                   Label="Sub Vertical"
                   Variant="Variant.Outlined"
                   Class="white-bg"
                   @bind-Value="selectedCategory"
                   FullWidth="true">
            <MudSelectItem T="string" Value="@("deals")">Deals</MudSelectItem>
        </MudSelect>

        @if (!string.IsNullOrEmpty(Ad.SelectedCategoryId) && SelectedCategory?.Children?.Any() == true)
        {
          <MudSelect T="string" Class="white-bg" Label="Subcategory" Variant="Variant.Outlined"
                    Value="@Ad.SelectedSubcategoryId"
                    ValueChanged="@OnSubCategoryChanged"
                    For="@(() => Ad.SelectedSubcategoryId)"
                    FullWidth="true">
                @foreach (var sub in SelectedCategory.Children)
                {
                    <MudSelectItem T="string" Value="@sub.Id.ToString()">@sub.Name</MudSelectItem>
                }
            </MudSelect>

        }

        @if (!string.IsNullOrEmpty(Ad.SelectedSubcategoryId) && SelectedSubcategory?.Children?.Any() == true)
        {
            <MudSelect T="string"Class="white-bg" Label="Sub Subcategory" Variant="Variant.Outlined"
                Value="@Ad.SelectedSubSubcategoryId"
                ValueChanged="@OnSubSubCategoryChanged"
                For="@(() => Ad.SelectedSubSubcategoryId)"
                FullWidth="true">
            @foreach (var subsub in SelectedSubcategory.Children)
            {
                <MudSelectItem T="string" Value="@subsub.Id.ToString()">@subsub.Name</MudSelectItem>
            }
        </MudSelect>

        }
        @if (AvailableFields != null)
        {
            @foreach (var field in AvailableFields.Where(f => AllowedFields.Contains(f.Name)))
            {
                if (!Ad.DynamicFields.ContainsKey(field.Name))
                {
                    Ad.DynamicFields[field.Name] = string.Empty;
                }

                <div class="mt-2">
                    @if (field.Type == "dropdown" || field.Type == "Dropdown")
                    {
                        <MudSelect T="string"
                                Label="@field.Name"
                                Variant="Variant.Outlined"
                                @bind-Value="Ad.DynamicFields[field.Name]"
                                FullWidth="true"
                                Class="white-bg"
                                Immediate="true">
                            @foreach (var option in field.Options)
                            {
                                <MudSelectItem T="string" Value="@option">@option</MudSelectItem>
                            }
                        </MudSelect>
                    }
                    else if (field.Type == "Free Text")
                    {
                        <MudTextField T="string"
                                    Label="@field.Name"
                                    Variant="Variant.Outlined"
                                    @bind-Value="Ad.DynamicFields[field.Name]"
                                    FullWidth="true"
                                    Class="white-bg" />
                    }

                        @if (DynamicFieldErrors.TryGetValue(field.Name, out var errors))
                    {
                        @foreach (var error in errors)
                        {
                            <div class="mud-input-error">@error</div>
                        }
                    }
                </div>
            }
        }
      
        <h3 class="form-heading">Description and Features</h3>
        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="string" Label="Offer Title"
                      @bind-Value="Ad.Title" For="@(() => Ad.Title)" FullWidth="true" />

        <MudPaper Class="d-flex align-center mt-2 p-2 doc-input no-underline">
            <MudText Typo="Typo.body1">
                Flyer File
                @if (!string.IsNullOrEmpty(Ad.CertificateFileName))
                {

                    <MudText Typo="Typo.caption" Class="ml-2">@Ad.CertificateFileName</MudText>
                    <MudIconButton Icon="@Icons.Material.Outlined.Close"
                                   Size="Size.Small"
                                   Color="Color.Error"
                                   OnClick="ClearFile" />
                }

            </MudText>
            <MudSpacer />
            <MudFileUpload T="IBrowserFile"
                           Accept=".pdf,.png,.jpg,.jpeg"
                           MaxFileSize="10485760"
                           FilesChanged="OnCrFileSelected">
                <ActivatorContent>
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                               Class="upload-button">
                        Upload
                        <img src="/qln-images/upload_white_icon.svg" width="20" height="20" />
                    </MudButton>
                </ActivatorContent>
            </MudFileUpload>

        </MudPaper>
        <MudText Typo="Typo.caption">Supported file formats: PDF, PNG, JPG. Max: 10MB</MudText>


     
        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="string" Label="XML Link"
                      @bind-Value="Ad.XmlLink" For="@(() => Ad.XmlLink)" FullWidth="true" />

        <MudDatePicker Label="Expiry Date"
                       T="DateTime?"
                       @bind-Date="EndDay"
                       Adornment="Adornment.End"
                       AdornmentIcon="@Icons.Material.Filled.Event"
                       Class="white-bg"
                       Variant="Variant.Outlined" />
        <h3 class="form-heading">Contact Details</h3>
        <div class="form-group">
                <!-- Phone -->
                    <PhoneNumberInput
                        SelectedCountry="@SelectedPhoneCountry"
                        Placeholder="Phone Number"
                        SelectedCountryChanged="@OnPhoneCountryChanged"
                        PhoneNumber="@Ad.PhoneNumber"
                        PhoneNumberChanged="@OnPhoneChanged" />
                <ValidationMessage For="@(() => Ad.PhoneNumber)" />
                </div>
                <div class="form-group">
                    <!-- WhatsApp -->
                    <PhoneNumberInput
                        SelectedCountry="@SelectedWhatsappCountry"
                        Placeholder="WhatsApp Number"
                        SelectedCountryChanged="@OnWhatsappCountryChanged"
                        PhoneNumber="@Ad.WhatsappNumber"
                        PhoneNumberChanged="@OnWhatsappChanged" />
                <ValidationMessage For="@(() => Ad.WhatsappNumber)" />
                </div>

        <h3 class="form-heading">Location</h3>

        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="string" Label="Zone"
                      @bind-Value="Ad.Zone" For="@(() => Ad.Zone)" FullWidth="true" />

        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="int?" Label="Street Number"
                      @bind-Value="Ad.StreetNumber" For="@(() => Ad.StreetNumber)" FullWidth="true" />

        <MudTextField Class="white-bg" Variant="Variant.Outlined" T="int?" Label="Building Number"
                      @bind-Value="Ad.BuildingNumber" For="@(() => Ad.BuildingNumber)" FullWidth="true" />

        <div id="map" style="height: 300px; width: 100%;"></div>

        <MudCheckBox Color="Color.Primary" T="bool" Label="I agree to terms"
                      @bind-Value="Ad.IsAgreed" For="@(() => Ad.IsAgreed)" />

        <div class="custom-button-group">
            <MudButton Class="custom-button" Variant="Variant.Outlined">Cancel</MudButton>
            <MudButton Class="custom-button" Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Submit</MudButton>
        </div>
    </div>
</EditForm>

<style>
   

    .white-bg input,
    .white-bg textarea,
    .white-bg .mud-input,
    .white-bg .mud-select,
    .white-bg .mud-select-input,
    .white-bg .mud-input-slot {
        background-color: white !important;
    }
</style>
