@inherits PromotedItemCardBase
@using MudBlazor
@using QLN.Web.Shared.Models
@using QLN.Web.Shared.Components.EmptyCard

<div class="card">
  
      @if (Item?.IsPromoted == true)
        {
            <div class="Promoted-badge">
                <img src="/qln-images/classifieds/featured_tag_icon.svg" alt="Promoted" class="Promoted-badge-icon" />
                <span>Promoted</span>
            </div>
            }

            @if (Item.IsFeatured == true)
            {
                <div class="Featured-badge">
                    <img src="/qln-images/classifieds/featured_tag_icon.svg" alt="Featured" class="Promoted-badge-icon" />
                    <span>Featured</span>
                </div>
        }



    <MudIconButton Icon="@(isFavorite? Icons.Material.Filled.Favorite : Icons.Material.Outlined.FavoriteBorder)"
        Color="@(isFavorite? Color.Error: Color.Inherit)" OnClick="@(() => HandleHeartClick(Item))"
        Class="@heartIconClass" />

    <div class="carousel-container" @onmouseover="() => isHovered = true" @onmouseout="() => isHovered = false">
        @if (ShowEmptyCard)
    {
        <div class="card-image">
        <EmptyCard Title="No image found." Subtitle="Please check back later for updates." />
        </div>
    }
    else
    {
        @if (!imageLoaded)
        {
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="214px" />
        }

        <img 
             src="@Item.Images[activeIndex].Url"
         alt="@Item.Images[activeIndex].Order ?? Item.Title"
         class="card-image"
             style="@(imageLoaded ? "display: block;" : "display: none;")"
             @onload="OnImageLoaded"
             @onerror="OnImageError"
             key="@Item.Images[activeIndex].Url" />
    }

        @if (isHovered && Item.Images.Count > 1)
        {

           <button class="nav-arrow-grid left" @onclick="PrevImage">
                <MudIcon Icon="@Icons.Material.Filled.ChevronLeft" />
            </button>

            <button class="nav-arrow-grid right" @onclick="NextImage">
                <MudIcon Icon="@Icons.Material.Filled.ChevronRight" />
            </button>
        }

        @if (Item.Images != null && Item.Images.Count > 0)
        {
            <div class="image-counter">@(activeIndex + 1)/@Item.Images.Count</div>
        }

        @if (Item.Images != null && Item.Images.Count > 1)
        {
            <div class="carousel-dots">
                @{
                    var maxDots = 5;
                    var total = Item.Images.Count;
                    var start = 0;

                    if (total > maxDots)
                    {
                        if (activeIndex < 2)
                            start = 0;
                        else if (activeIndex > total - 3)
                            start = total - maxDots;
                        else
                            start = activeIndex - 2;
                    }

                    var visibleDots = Item.Images.Skip(start).Take(Math.Min(maxDots, total)).ToList();
                }

                @for (int i = 0; i < visibleDots.Count; i++)
                {
                    var actualIndex = start + i;
                    <span class="dot @(actualIndex == activeIndex ? "active" : "")"></span>
                }
            </div>
        }

        @if (!string.IsNullOrEmpty(Item.Status))
        {
            <div class="condition-badge">@Item.Status</div>
        }
    </div>

    <div id="@Item.Id" class="card-content" @onclick="HandleSelect">
        <div class="category">@Item.Category</div>
        <h3 class="title">@Item.Title</h3>
        <div class="features">
            @if (!string.IsNullOrEmpty(Item.Colour))
            {
                <div class="feature-item">
                    <img src="/qln-images/classifieds/colour_icon.svg" alt="Color" class="feature-icon" />
                    <span class="feature-name">@Item.Colour</span>
                </div>
                <div class="divider"></div>
            }

            @if (!string.IsNullOrEmpty(Item.Storage))
            {
                <div class="feature-item">
                    <img src="/qln-images/classifieds/storage_icon.svg" alt="Storage" class="feature-icon" />
                    <span class="feature-name">@Item.Storage</span>
                </div>
                <div class="divider"></div>
            }

            @if (Item.BatteryPercentage.HasValue)
            {
                <div class="feature-item">
                    <img src="/qln-images/classifieds/battery_icons.svg" alt="Battery" class="feature-icon" />
                    <span class="feature-name">@($"{Item.BatteryPercentage}%")</span>
                </div>
                <div class="divider"></div>
            }

            @if (!string.IsNullOrEmpty(Item.Processor))
            {
                <div class="feature-item">
                    <img src="/qln-images/classifieds/chip_icons.svg" alt="Processor" class="feature-icon" />
                    <span class="feature-name">@Item.Processor</span>
                </div>
            }
        </div>


          <div class="grid-card-price">
            <span>@Item.Price</span>
            <span class="currency">QAR</span>
        </div>
        @* <div class="company-details">
            <img src="@(!string.IsNullOrEmpty(Item.CompanyLogoUrl) ? Item.CompanyLogoUrl : "/qln-images/classifieds/item_logo.svg")"
                alt="logo" class="company-logo" />
            <div class="company-info">
                <span class="company-name">@Item.Company</span>
                <div class="location">
                    <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" />
                    @Item.Location
                </div>
            </div>
        </div> *@
    </div>
</div>


<style>
    .card {
        position: relative;
        border-radius: 6px;
        overflow: hidden;
        background: #fff;
        font-family: 'Public Sans', sans-serif;
        transition: transform 0.3s ease;
        width: 100%;
        height:  402px;
        box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        will-change: transform;
    }

    .card:hover {
        transform: translateY(-6px) scale(1.02);
        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);
        z-index: 2;
    }

    .Promoted-badge {
        position: absolute;
        top: 10px;
        left: 0;
        background-color: #FF7F38;
        color: white;
        padding: 4px 6px;
        font-size: 11px;
        font-weight: 500;
        z-index: 2;
        display: flex;
        align-items: center;
        gap: 2px;
        border-radius: 0 2px 2px 0;
    }
     .Featured-badge {
        position: absolute;
        top: 40px;
        left: 0;
        background-color: #FF7F38;
        color: white;
        padding: 4px 6px;
        font-size: 11px;
        font-weight: 500;
        z-index: 2;
        display: flex;
        align-items: center;
        gap: 2px;
        border-radius: 0 2px 2px 0;
    }
    .Promoted-badge-icon{
        width: 12px;
        height: 12px;
    }

    .heart-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border-radius: 50%;
        padding: 5px;
        box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);
        z-index: 2;
    }

    .heart-icon.filled {
        color: #FF7F38 !important;
        background: white !important;
    }

    .heart-icon.outlined {
        color: #FF7F38 !important;
        background: white !important;
    }

    .carousel-container {
        position: relative;
    }

    .card-image {
        width: 100%;
        height: 214px;
        object-fit: cover;
    }

    .nav-arrow-grid {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: #F0F0F0;
        color: #242424;
        border: none;
        padding: 8px;
        border-radius: 50%;
        font-size: 18px;
        cursor: pointer;
        z-index: 3;
    }

    .nav-arrow-grid.left {
        left: 10px;
    }

    .nav-arrow-grid.right {
        right: 10px;
    }

    .image-counter {
        position: absolute;
        bottom: 10px;
        left: 10px;
        background: #454545CC;
        color: white;
        padding: 2px 10px;
        border-radius: 2px;
        font-size: 12px;
    }

    .condition-badge {
        position: absolute;
        bottom: 10px;
        right: 0px;
        background: #0071AF;
        color: white;
        padding: 2px 8px;
        font-size: 12px;
        font-weight: 500;
    }

    .card-content {
        padding: 12px 15px;
        cursor: pointer;
    }

    .category {
        font-size: 11px;
        font-weight: 500;
        color: var(--color-text-descripton);
         display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .title {
        font-size: 18px;
        margin: 8px 0;
        font-weight: 600;
        line-height: 1.3;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        color: var(--color-text-heading);
    }

    .features {
        display: flex;
        align-items: center;
        gap: 12px;
        flex-wrap: nowrap;
        /* Ensure one line only */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;

    }

    .feature-item {
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .feature-name {
        font-size: 14px;
        font-weight: 500;
        color: #242424;
    }

    .feature-icon {
        width: 14px;
        height: 14px;
        object-fit: contain;
    }

    .divider {
        width: 1px;
        height: 16px;
        background-color: #ccc;
    }

    .grid-card-price {
        font-size: 25px;
        font-weight: 600;
        color: var(--color-text-heading);
        margin-top: 2px;
    }

    .grid-card-price .currency {
        font-size: 14px;
        font-weight: 500;
        margin-left: 4px;
        color: var(--color-text-heading);
    }

    .company-details {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-top: 8px;
    }

    .company-logo {
        width: 40px;
        height: 40px;
        border-radius: 2px;
        object-fit: contain;
    }

    .company-info {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .company-name {
        font-weight: 600;
        font-size: 12px;
        color: #00426D;
    }

    .location {
        font-size: 12px;
        font-weight: 600;
        color: #777;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .carousel-dots {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 4px;
        z-index: 4;
    }

    .dot {
        width: 6px;
        height: 6px;
        background-color: rgba(255, 255, 255, 0.6);
        border-radius: 50%;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    .dot.active {
        background-color: var(--color-primary);
        width: 8px;
        height: 8px;
    }
</style>
