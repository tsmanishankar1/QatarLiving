@inherits QLN.Web.Shared.Components.Classifieds.PromotedItemCards.PromotedItemCardBase
@using MudBlazor
@using QLN.Web.Shared.Models

<div class="card">
  
        <div class="Promoted-badge">
            <MudIcon Icon="@Icons.Material.Filled.FlashOn" Size="Size.Small" Class="Promoted-icon" />
            <span>Promoted</span>
        </div>

    <MudIconButton Icon="@(isFavorite? Icons.Material.Filled.Favorite : Icons.Material.Outlined.FavoriteBorder)"
        Color="@(isFavorite? Color.Error: Color.Inherit)" OnClick="@(() => HandleHeartClick(Item))"
        Class="@heartIconClass" />

    <div class="carousel-container" @onmouseover="() => isHovered = true" @onmouseout="() => isHovered = false">
        @if (Item.ImageUrls != null && Item.ImageUrls.Count > 0)
        {
            <img src="@Item.ImageUrls[activeIndex]" alt="@Item.Title" class="card-image" />
        }
        else
        {
            <img src="/qlm-images/categories/game_image.svg" alt="No image available" class="card-image" />
        }

        @if (isHovered && Item.ImageUrls.Count > 1)
        {

            <button class="nav-arrow left" @onclick="PrevImage">&#10094;</button>
            <button class="nav-arrow right" @onclick="NextImage">&#10095;</button>
        }

        @if (Item.ImageUrls != null && Item.ImageUrls.Count > 0)
        {
            <div class="image-counter">@(activeIndex + 1)/@Item.ImageUrls.Count</div>
        }

        @if (Item.ImageUrls != null && Item.ImageUrls.Count > 1)
        {
            <div class="carousel-dots">
                @{
                    var maxDots = 5;
                    var total = Item.ImageUrls.Count;
                    var start = 0;

                    if (total > maxDots)
                    {
                        if (activeIndex < 2)
                            start = 0;
                        else if (activeIndex > total - 3)
                            start = total - maxDots;
                        else
                            start = activeIndex - 2;
                    }

                    var visibleDots = Item.ImageUrls.Skip(start).Take(Math.Min(maxDots, total)).ToList();
                }

                @for (int i = 0; i < visibleDots.Count; i++)
                {
                    var actualIndex = start + i;
                    <span class="dot @(actualIndex == activeIndex ? "active" : "")"
                        @onclick="(() => SetImageIndex(actualIndex))"></span>
                }
            </div>
        }

        @if (!string.IsNullOrEmpty(Item.Condition))
        {
            <div class="condition-badge">@Item.Condition</div>
        }
    </div>

    <div id="@Item.Id" class="card-content" @onclick="() => HandleSelect(Item)">
        <div class="category">@Item.Category</div>
        <h3 class="title">@Item.Title</h3>
        <div class="features">
            @if (!string.IsNullOrEmpty(Item.Colour))
            {
                <div class="feature-item">
                    <img src="/qlm-images/classifieds/colour_icon.svg" alt="Color" class="feature-icon" />
                    <span class="feature-name">@Item.Colour</span>
                </div>
                <div class="divider"></div>
            }

            @if (!string.IsNullOrEmpty(Item.Storage))
            {
                <div class="feature-item">
                    <img src="/qlm-images/classifieds/storage_icon.svg" alt="Storage" class="feature-icon" />
                    <span class="feature-name">@Item.Storage</span>
                </div>
                <div class="divider"></div>
            }

            @if (Item.BatteryPercentage.HasValue)
            {
                <div class="feature-item">
                    <img src="/qlm-images/classifieds/battery_icons.svg" alt="Battery" class="feature-icon" />
                    <span class="feature-name">@($"{Item.BatteryPercentage.Value}%")</span>
                </div>
                <div class="divider"></div>
            }

            @if (!string.IsNullOrEmpty(Item.Processor))
            {
                <div class="feature-item">
                    <img src="/qlm-images/classifieds/chip_icons.svg" alt="Processor" class="feature-icon" />
                    <span class="feature-name">@Item.Processor</span>
                </div>
            }
        </div>


        <div class="price">@Item.Price</div>
        <div class="company-details">
            <img src="@(!string.IsNullOrEmpty(Item.CompanyLogoUrl) ? Item.CompanyLogoUrl : "/qlm-images/classifieds/item_logo.svg")"
                alt="logo" class="company-logo" />
            <div class="company-info">
                <span class="company-name">@Item.Company</span>
                <div class="location">
                    <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" />
                    @Item.Location
                </div>
            </div>
        </div>
    </div>
</div>


<style>
    .card {
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        background: #fff;
        font-family: 'Public Sans', sans-serif;
        transition: transform 0.3s ease;
        flex: 1 1 auto;
        max-width: 100%;
        max-height: 402px;
    }

    .card:hover {
        transform: translateY(-2px);
    }

    .Promoted-badge {
        position: absolute;
        top: 10px;
        left: 0;
        background-color: #FF7F38;
        color: white;
        padding: 4px 6px;
        font-size: 11px;
        font-weight: 500;
        z-index: 2;
        display: flex;
        align-items: center;
        gap: 2px;
        border-radius: 0 2px 2px 0;
    }

    .heart-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border-radius: 50%;
        padding: 5px;
        box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);
        z-index: 2;
    }

    .heart-icon.filled {
        color: #FF7F38 !important;
        background: white !important;
    }

    .heart-icon.outlined {
        color: #FF7F38 !important;
        background: white !important;
    }

    .carousel-container {
        position: relative;
    }

    .card-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .nav-arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: #F0F0F0;
        color: #242424;
        border: none;
        padding: 4px 10px;
        border-radius: 50%;
        font-size: 18px;
        cursor: pointer;
        z-index: 3;
    }

    .nav-arrow.left {
        left: 10px;
    }

    .nav-arrow.right {
        right: 10px;
    }

    .image-counter {
        position: absolute;
        bottom: 10px;
        left: 10px;
        background: #454545CC;
        color: white;
        padding: 2px 10px;
        border-radius: 2px;
        font-size: 12px;
    }

    .condition-badge {
        position: absolute;
        bottom: 10px;
        right: 0px;
        background: #0071AF;
        color: white;
        padding: 2px 8px;
        font-size: 12px;
        font-weight: 500;
    }

    .card-content {
        padding: 15px;
        cursor: pointer;
    }

    .category {
        font-size: 11px;
        font-weight: 500;
        color: #646464;
    }

    .title {
        font-size: 18px;
        margin: 8px 0;
        font-weight: 600;
        line-height: 1.3;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .features {
        display: flex;
        align-items: center;
        gap: 12px;
        flex-wrap: nowrap;
        /* Ensure one line only */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;

    }

    .feature-item {
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .feature-name {
        font-size: 14px;
        font-weight: 500;
        color: #242424;
    }

    .feature-icon {
        width: 14px;
        height: 14px;
        object-fit: contain;
    }

    .divider {
        width: 1px;
        height: 16px;
        background-color: #ccc;
    }

    .price {
        font-size: 18px;
        font-weight: 600;
        color: #242424;
        margin: 8px 0;
    }

    .company-details {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-top: 8px;
    }

    .company-logo {
        width: 40px;
        height: 40px;
        border-radius: 2px;
        object-fit: contain;
    }

    .company-info {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .company-name {
        font-weight: 600;
        font-size: 12px;
        color: #00426D;
    }

    .location {
        font-size: 12px;
        font-weight: 600;
        color: #777;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .carousel-dots {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 4px;
        z-index: 4;
    }

    .dot {
        width: 6px;
        height: 6px;
        background-color: rgba(255, 255, 255, 0.6);
        border-radius: 50%;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    .dot.active {
        background-color: white;
        width: 8px;
        height: 8px;
    }
</style>
