@page "/manage/news/addarticle"
@page "/manage/news/addarticle/category/{CategoryId:int}/subcategory/{SubCategoryId:int}"

@inherits AddArticleBase

<MudContainer MaxWidth="MaxWidth.False">
    <EditForm Model="@article" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid GutterSize="24px">
            <!-- Left Column -->
            <MudItem xs="12" md="7">
                <MudText Class="mb-4 title-style">Article Form</MudText>

                <MudText Typo="Typo.body2" Class="mt-4 mb-1" Style="margin-left:4px">Required Category</MudText>
                <MudGrid GutterSize="16px" Class="mb-4">
                    <MudItem xs="4">
                        <MudSelect T="int" Value="Category.CategoryId" ValueChanged="OnCategoryChanged" Class="w-100" Variant="Variant.Filled" Label="Category" Placeholder="Choose" For="@(() => Category.CategoryId)">
                            <MudSelectItem Value="@(0)">Choose</MudSelectItem>
                            @foreach (var item in Categories)
                            {
                                <MudSelectItem Value="@item.Id">@item.CategoryName</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>

                    <MudItem xs="4">
                        <MudSelect T="int" @bind-Value="Category.SubcategoryId" Class="w-100" Variant="Variant.Filled" Label="Subcategory" Placeholder="Choose" For="@(() => Category.SubcategoryId)">
                            <MudSelectItem Value="@(0)">Choose</MudSelectItem>
                            @foreach (var item in FilteredSubCategories)
                            {
                                <MudSelectItem Value="@item.Id">@item.SubCategoryName</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>

                    <MudItem xs="3">

                        <MudSelect T="int" @bind-Value="Category.SlotId" Class="w-100" Variant="Variant.Filled" Placeholder="Slot" For="@(() => Category.SlotId)">
                            <MudSelectItem Value="@(0)">Choose</MudSelectItem>
                            @foreach (var item in Slots)
                            {
                                <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                </MudGrid>
                
                <MudText Typo="Typo.body2" Class="mt-4 mb-1" Style="margin-left:4px;font-style: italic;">Optional Category</MudText>
                    <MudGrid GutterSize="16px" Class="mb-4">
                        <MudItem xs="4">
                            <MudSelect T="int" Value="CategoryTwo.CategoryId" ValueChanged="OnCategoryTwoChanged" Class="w-100" Variant="Variant.Filled" Label="Category" Placeholder="Choose" For="@(() => CategoryTwo.CategoryId)">
                                <MudSelectItem Value="@(0)">Choose</MudSelectItem>
                                @foreach (var item in Categories)
                                {
                                    <MudSelectItem Value="@item.Id">@item.CategoryName</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="4">
                            <MudSelect T="int" @bind-Value="CategoryTwo.SubcategoryId" Class="w-100" Variant="Variant.Filled" Label="Subcategory" Placeholder="Choose" For="@(() => CategoryTwo.SubcategoryId)">
                                <MudSelectItem Value="@(0)">Choose</MudSelectItem>

                                @foreach (var item in FilteredSubCategoriesTwo)
                                {
                                    <MudSelectItem Value="@item.Id">@item.SubCategoryName</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="3">

                            <MudSelect T="int" @bind-Value="CategoryTwo.SlotId" Class="w-100" Variant="Variant.Filled" Placeholder="Slot" For="@(() => CategoryTwo.SlotId)">
                                <MudSelectItem Value="@(0)">Choose</MudSelectItem>
                                @foreach (var item in Slots)
                                {
                                    <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                    </MudGrid>

                <MudSelect T="string" @bind-Value="article.WriterTag" Label="Writer" Variant="Variant.Filled" Placeholder="Choose" Class="mt-4 w-100" For="@(() => article.WriterTag)">
                    @foreach (var item in WriterTags)
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>

                <MudTextField Label="Article Title" Variant="Variant.Filled" Class="mt-4 w-100" @bind-Value="article.Title" MaxLength="255" For="@(() => article.Title)" />

                <MudText Typo="Typo.body2" Class="mt-4 mb-1" Style="margin-left:6px">Article content</MudText>
                <MudExRichTextEdit @bind-Value="article.Content" @ref="@Editor"
                                   Height="444"
                                   Class="m-2"
                                   Placeholder="Start Typing"
                                   For="@(() => article.Content)"
                                   Required="true">
                </MudExRichTextEdit>
                <ValidationSummary />
                <MudStack Row Class="mt-6 justify-content-between">
                    <MudButton Class="action-btn rounded-lg" Variant="Variant.Filled" Color="Color.Default" Style="text-transform: capitalize;" OnClick="@Cancel">Cancel</MudButton>
                    <MudButton Class="ml-2 rounded-lg action-btn" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Style="text-transform: capitalize;" Color="Color.Primary" Disabled="IsBtnDisabled">Save</MudButton>
                </MudStack>
            </MudItem>

            <!-- Right Column -->
            <MudItem xs="12" md="5">
                <MudText Class="mb-4 title-style">Image</MudText>

                <!-- Cover Image Upload -->
                <MudFileUpload T="IBrowserFile" Accept="image/*" OnFilesChanged="@(e => HandleFilesChanged(e))" MaximumFileCount="1" MaxFileSize="2097152" @ref="_fileUpload">
                    <ActivatorContent>
                        <MudPaper Class="pa-6 d-flex flex-column align-center justify-center" Style="min-height: 200px; border: 1px dashed #ccc; cursor: pointer;">
                            @if (!string.IsNullOrEmpty(article.CoverImageUrl))
                            {
                                <img src="@article.CoverImageUrl" alt="Cover Image Preview" style="width: 100%; max-height: 200px; object-fit: cover;" />
                            }
                            else
                            {
                                <div class="d-flex flex-column align-center">
                                    <div class="icon-circle">
                                        <img src="/qln-images/upload_icon.svg"
                                             class="file-upload-style"
                                             alt="Upload" />
                                    </div>
                                    <div class="mt-1" style="color: #FF7F38;">Cover Image</div>
                                </div>
                            }
                        </MudPaper>
                    </ActivatorContent>
                </MudFileUpload>
                @if (!string.IsNullOrEmpty(article.CoverImageUrl))
                {
                    <MudPaper Elevation="0" Class="image-picker-style">
                        <div class="upload-action-style">
                            <MudButton OnClick="EditImage">
                                <img src="/qln-images/edit_icon.svg" alt="Edit" class="action-icon-style" />
                            </MudButton>
                            <MudButton OnClick="RemoveImage">
                                <img src="/qln-images/delete_icon.svg" alt="delete" class="action-icon-style" />
                            </MudButton>
                        </div>
                    </MudPaper>
                }
            </MudItem>
        </MudGrid>
    </EditForm>
</MudContainer>
@if (IsLoading)
{
    <MudOverlay @bind-Visible="IsLoading" DarkBackground AutoClose="false">
        <MudProgressCircular Color="Color.Warning" Rounded="true" Indeterminate="true" />
    </MudOverlay>
}


<style>
    .action-btn {
        height: 40px;
        width: 230px;
    }

    .title-style {
        font-family: 'Public Sans', sans-serif;
        font-size: 18px;
        font-weight: 600;
        color: #00426D;
        text-transform: none;
    }

    .image-picker-style {
        background-color: #000000CC;
        width: 100%;
        height: 39px;
    }


    .upload-action-style {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
    }

    .action-icon-style {
        width: 20px;
        height: 20px;
    }

    .file-upload-style {
        width: 24px;
        height: 24px;
    }

    .icon-circle {
        background-color: #FAFAFA;
        border-radius: 50%;
        width: 64px;
        height: 64px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

</style>
