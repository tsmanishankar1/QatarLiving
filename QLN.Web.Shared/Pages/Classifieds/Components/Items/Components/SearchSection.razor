@using MudBlazor
@using QLN.Web.Shared.Components.ViewToggleButtons

<MudPaper Class="search-container" Elevation="0">
    <div class="search-row">
        <div class="search-col search-input-box">
            <MudTextField @bind-Value="_searchText" Placeholder="Search" Adornment="Adornment.Start"
                AdornmentIcon="@Icons.Material.Filled.Search" Variant="Variant.Outlined" Class="search-input" />
        </div>

        <div class="search-col">
            <MudSelect T="string" @bind-Value="_category" Placeholder="Category" Variant="Variant.Outlined" Dense="true"
                Class="search-input">
                @foreach (var item in _categories)
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
        </div>

        <div class="search-col">
            <MudSelect T="string" @bind-Value="_brand" Placeholder="Brand" Variant="Variant.Outlined" Dense="true"
                Class="search-input">
                @foreach (var item in _brands)
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
        </div>

        <div class="search-col">
            <MudSelect T="string" @bind-Value="_price" Placeholder="Price" Variant="Variant.Outlined" Dense="true"
                Class="search-input">
                @foreach (var item in _prices)
                {
                    <MudSelectItem Value="@item.Value">@item.Label</MudSelectItem>
                }
            </MudSelect>
        </div>

        <div class="search-col icon-col">
            <MudIconButton Icon="@Icons.Material.Filled.Tune" Title="More Filters" Color="Color.Default"
                Class="action-icon" />
        </div>

       <ViewToggleButtons Items="@_viewOptions"
                 SelectedValue="@_selectedView"
                 OnSelected="SetViewMode" />

    </div>
</MudPaper>

@code {
    private string _searchText;
    private string _category;
    private string _brand;
    private string _price;
private string _selectedView = "grid";

private void SetViewMode(string view)
{
    _selectedView = view;
    // Do something with selected view
}

private List<ViewToggleButtons.ViewToggleOption> _viewOptions = new()
{
    new() { ImageUrl = "/images/list_icon.svg", Label = "List", Value = "list" },
    new() { ImageUrl = "/images/grid_icon.svg", Label = "Grid", Value = "grid" }
};

    private List<string> _categories = new() { "Books", "Electronics", "Furniture" };
    private List<string> _brands = new() { "Apple", "Samsung", "Sony" };
    private List<(string Label, string Value)> _prices = new()
{
("$0 - $100", "0-100"),
("$100 - $500", "100-500"),
("$500+", "500")
};
}

<style>
    .search-container {
        width: 100%;
        background-color: #f9f9f9;
        padding: 10px 16px;
    }

    .search-row {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        align-items: center;
    }

    .search-col {
        display: flex;
        align-items: center;
    }

    .search-input-box {
        flex: 1 1 180px;
        min-width: 180px;
    }

    .search-input {
        background-color: #fff;
        font-size: 14px;
        width: 100%;
    }

    .icon-col {
        flex-shrink: 0;
    }

    .right-actions {
        margin-left: auto;
        display: flex;
        gap: 8px;
        align-items: center;
    }

    .save-search {
        cursor: pointer;
        font-size: 14px;
        font-weight: 500;
        color: #ff7f2a;
        white-space: nowrap;
    }

    .action-icon {
        color: #666;
    }

    .view-toggle {
        background-color: #f2f2f2;
        border-radius: 6px;
        padding: 4px;
    }

    .view-toggle.active {
        background-color: #ff7f2a;
        color: white;
    }
</style>
