// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QLN.Common.Infrastructure.QLDbContext;

#nullable disable

namespace QLN.Common.Migrations.QLSubscription
{
    [DbContext(typeof(QLSubscriptionContext))]
    partial class QLSubscriptionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QLN.Common.Infrastructure.Model.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("ProductType")
                        .HasColumnType("integer");

                    b.Property<int?>("SubVertical")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Vertical")
                        .HasColumnType("integer");

                    b.HasKey("ProductCode");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.HasIndex("Vertical");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("QLN.Common.Infrastructure.Model.Subscription", b =>
                {
                    b.Property<Guid>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("SubVertical")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Vertical")
                        .HasColumnType("integer");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductCode");

                    b.HasIndex("UserId");

                    b.HasIndex("Vertical");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("QLN.Common.Infrastructure.Model.UserAddOn", b =>
                {
                    b.Property<Guid>("UserAddOnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PaymentId")
                        .HasMaxLength(100)
                        .HasColumnType("integer");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("SubVertical")
                        .HasColumnType("integer");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("Vertical")
                        .HasColumnType("integer");

                    b.HasKey("UserAddOnId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductCode");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("UserId");

                    b.HasIndex("Vertical");

                    b.ToTable("UserAddOns");
                });

            modelBuilder.Entity("QLN.Common.Infrastructure.Model.Product", b =>
                {
                    b.OwnsOne("QLN.Common.DTO_s.Subscription.ProductConstraints", "Constraints", b1 =>
                        {
                            b1.Property<string>("ProductCode")
                                .HasColumnType("character varying(50)");

                            b1.Property<int?>("AdsBudget")
                                .HasColumnType("integer");

                            b1.Property<TimeSpan?>("Duration")
                                .HasColumnType("interval");

                            b1.Property<int?>("FeaturedBudget")
                                .HasColumnType("integer");

                            b1.Property<bool?>("IsAddOn")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("PayToFeature")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("PayToPromote")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("PayToPublish")
                                .HasColumnType("boolean");

                            b1.Property<int?>("PromotedBudget")
                                .HasColumnType("integer");

                            b1.Property<int?>("RefreshBudgetPerAd")
                                .HasColumnType("integer");

                            b1.Property<int?>("RefreshBudgetPerDay")
                                .HasColumnType("integer");

                            b1.Property<string>("Remarks")
                                .HasColumnType("text");

                            b1.Property<string>("Scope")
                                .HasColumnType("text");

                            b1.HasKey("ProductCode");

                            b1.ToTable("Products");

                            b1.ToJson("Constraints");

                            b1.WithOwner()
                                .HasForeignKey("ProductCode");
                        });

                    b.Navigation("Constraints");
                });

            modelBuilder.Entity("QLN.Common.Infrastructure.Model.Subscription", b =>
                {
                    b.OwnsOne("QLN.Common.DTO_s.Subscription.SubscriptionQuota", "Quota", b1 =>
                        {
                            b1.Property<Guid>("SubscriptionId")
                                .HasColumnType("uuid");

                            b1.Property<int>("AdsUsed")
                                .HasColumnType("integer");

                            b1.Property<bool>("CanFeatureAds")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanPostSocialMedia")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanPromoteAds")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanPublishAds")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanRefreshAds")
                                .HasColumnType("boolean");

                            b1.Property<int>("DailyRefreshesAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("DailyRefreshesUsed")
                                .HasColumnType("integer");

                            b1.Property<int>("FeaturesUsed")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("LastDailyReset")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("LastRefreshUsed")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("LastUsageUpdate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<int?>("ListingsPerL2Category")
                                .HasColumnType("integer");

                            b1.Property<int>("PromotionsUsed")
                                .HasColumnType("integer");

                            b1.Property<string>("RefreshInterval")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("RefreshIntervalHours")
                                .HasColumnType("integer");

                            b1.Property<int>("RefreshesPerAdAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("RefreshesPerAdUsed")
                                .HasColumnType("integer");

                            b1.Property<string>("Scope")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("SocialMediaPostsAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("SocialMediaPostsUsed")
                                .HasColumnType("integer");

                            b1.Property<int>("TotalAdsAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("TotalFeaturesAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("TotalPromotionsAllowed")
                                .HasColumnType("integer");

                            b1.Property<string>("Vertical")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("SubscriptionId");

                            b1.ToTable("Subscriptions");

                            b1.ToJson("Quota");

                            b1.WithOwner()
                                .HasForeignKey("SubscriptionId");

                            b1.OwnsOne("QLN.Common.DTO_s.Subscription.SocialMediaQuota", "SocialMedia", b2 =>
                                {
                                    b2.Property<Guid>("SubscriptionQuotaSubscriptionId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("PostsAllowed")
                                        .HasColumnType("integer");

                                    b2.Property<int>("PostsUsed")
                                        .HasColumnType("integer");

                                    b2.HasKey("SubscriptionQuotaSubscriptionId");

                                    b2.ToTable("Subscriptions");

                                    b2.ToJson("SocialMedia");

                                    b2.WithOwner()
                                        .HasForeignKey("SubscriptionQuotaSubscriptionId");
                                });

                            b1.Navigation("SocialMedia");
                        });

                    b.Navigation("Quota")
                        .IsRequired();
                });

            modelBuilder.Entity("QLN.Common.Infrastructure.Model.UserAddOn", b =>
                {
                    b.OwnsOne("QLN.Common.DTO_s.Subscription.SubscriptionQuota", "Quota", b1 =>
                        {
                            b1.Property<Guid>("UserAddOnId")
                                .HasColumnType("uuid");

                            b1.Property<int>("AdsUsed")
                                .HasColumnType("integer");

                            b1.Property<bool>("CanFeatureAds")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanPostSocialMedia")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanPromoteAds")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanPublishAds")
                                .HasColumnType("boolean");

                            b1.Property<bool>("CanRefreshAds")
                                .HasColumnType("boolean");

                            b1.Property<int>("DailyRefreshesAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("DailyRefreshesUsed")
                                .HasColumnType("integer");

                            b1.Property<int>("FeaturesUsed")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("LastDailyReset")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("LastRefreshUsed")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("LastUsageUpdate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<int?>("ListingsPerL2Category")
                                .HasColumnType("integer");

                            b1.Property<int>("PromotionsUsed")
                                .HasColumnType("integer");

                            b1.Property<string>("RefreshInterval")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("RefreshIntervalHours")
                                .HasColumnType("integer");

                            b1.Property<int>("RefreshesPerAdAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("RefreshesPerAdUsed")
                                .HasColumnType("integer");

                            b1.Property<string>("Scope")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("SocialMediaPostsAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("SocialMediaPostsUsed")
                                .HasColumnType("integer");

                            b1.Property<int>("TotalAdsAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("TotalFeaturesAllowed")
                                .HasColumnType("integer");

                            b1.Property<int>("TotalPromotionsAllowed")
                                .HasColumnType("integer");

                            b1.Property<string>("Vertical")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UserAddOnId");

                            b1.ToTable("UserAddOns");

                            b1.ToJson("Quota");

                            b1.WithOwner()
                                .HasForeignKey("UserAddOnId");

                            b1.OwnsOne("QLN.Common.DTO_s.Subscription.SocialMediaQuota", "SocialMedia", b2 =>
                                {
                                    b2.Property<Guid>("SubscriptionQuotaUserAddOnId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("PostsAllowed")
                                        .HasColumnType("integer");

                                    b2.Property<int>("PostsUsed")
                                        .HasColumnType("integer");

                                    b2.HasKey("SubscriptionQuotaUserAddOnId");

                                    b2.ToTable("UserAddOns");

                                    b2.ToJson("SocialMedia");

                                    b2.WithOwner()
                                        .HasForeignKey("SubscriptionQuotaUserAddOnId");
                                });

                            b1.Navigation("SocialMedia");
                        });

                    b.Navigation("Quota")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
