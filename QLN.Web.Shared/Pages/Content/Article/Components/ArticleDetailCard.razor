@using MudBlazor
@inherits ArticleDetailCardBase
@using QLN.Web.Shared.Components.EmptyCard
<div class="event-card">
    <div class="event-title">@Post.Title</div>

    <div class="event-image-container">
        @if (loading)
        {
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave"
                         Class="rounded shadow-container" />
        }
        else if (@Post == null)
        {
            <EmptyCard Title="No article found" Subtitle="Please check back later or explore other categories." />
        }
        else
        {
            @if (string.IsNullOrEmpty(Post.ImageUrl))
            {
                <EmptyCard Title="No Images Available" Subtitle="" />
            }
            else
            {
                @if (!imageLoaded)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Class="event-image" />
                }
                <img src="@Post.ImageUrl" alt="News Image" class="event-image"
                     style="@(imageLoaded ? "display: block;" : "display: none;")" @onload="OnImageLoaded"
                     @onerror="OnImageError" />
            }
        }

        <div class="author-wrapper">
            <div class="main-author">
                <div style="gap: 8px;">
                    @(string.IsNullOrWhiteSpace(Post.UserName) ? "" : Post.UserName)
                    <h3 class="main-title">@FormattedDate</h3>
                </div>
            </div>


            <div class="icons">
                <MudMenu OffsetY="true" CloseOnClick="true" Class="custom-share-menu" AnchorOrigin="Origin.BottomLeft"
                         TransformOrigin="Origin.TopRight">
                    <ActivatorContent>
                        <MudIconButton Icon="@Icons.Material.Filled.Share" Class="icons-color" />
                    </ActivatorContent>
                    <ChildContent>
                        @foreach (var item in shareMenuItems)
                        {
                            if (item.OnClick != null)
                            {
                                <MudMenuItem OnClick="@item.OnClick">
                                    <img src="@item.ImageSrc" alt="@item.Text" class="share-icon" />
                                </MudMenuItem>
                            }
                            else
                            {
                                <MudMenuItem Href="@item.Route" Target="@(item.OpenInNewTab ? "_blank" : "_self")">
                                    <img src="@item.ImageSrc" alt="@item.Text" class="share-icon" />
                                </MudMenuItem>
                            }
                        }
                    </ChildContent>
                </MudMenu>

                <div class="comment-badge">
                    <img src="/qln-images/comment_icon.svg" alt="Comments" />
                    <span class="count">@commentsCount</span>
                </div>
            </div>
        </div>
    </div>
    @if (loading)
    {
        <MudSkeleton Class="mb-2 mt-2" SkeletonType="SkeletonType.Text" Height="24px" Width="100%"
                     Animation="Animation.Wave" />
        <MudSkeleton Class="mb-2 mt-2" SkeletonType="SkeletonType.Text" Height="24px" Width="60%"
                     Animation="Animation.Wave" />
        <MudSkeleton Class="mb-2 mt-2" SkeletonType="SkeletonType.Text" Height="24px" Width="100%"
                     Animation="Animation.Wave" />
        <MudSkeleton Class="mb-2 mt-2" SkeletonType="SkeletonType.Text" Height="24px" Width="60%"
                     Animation="Animation.Wave" />
        <MudSkeleton Class="mb-2 mt-2" SkeletonType="SkeletonType.Text" Height="24px" Width="100%"
                     Animation="Animation.Wave" />
        <MudSkeleton Class="mb-2 mt-2" SkeletonType="SkeletonType.Text" Height="24px" Width="60%"
                     Animation="Animation.Wave" />
    }
    else
    {
        <div class="event-description">
            <div>@ParsedDescription</div>
        </div>
    }
</div>

<style>
    .event-card {
        margin: auto;
        padding: 16px;
        background-color: white;
        border-radius: 12px;
        font-family: 'Public Sans', sans-serif;
    }

    .main-title {
        font-family: 'Public Sans', sans-serif;
        font-weight: 500;
        font-size: 13px;
        color: var(--color-text-heading);
    }

    .share-icon {
        margin: 0;
        width: 32px;
        height: 32px;
    }

        /* Target all popover menus that are open and belong to the share menu */
    .mud-popover:has(.share-icon) .mud-list {
        display: flex !important;
        flex-direction: row !important;
        overflow-x: auto;
        gap: 4px;
    }

    .share-popover .mud-list {
        display: flex !important;
        flex-direction: row !important;
        overflow-x: auto;
        gap: 4px;
    }


    .mud-menu-item {
        padding: 0px 6px 0px 0px !important;
    }

    .mud-menu-list {
        padding-left: 6px;
    }

    .mud-menu-item .mud-menu-item-text {
        margin: 4px 0px 0px 0px !important;
    }

    .event-title {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 16px;
    }

    .event-image-container {
        width: 100%;
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid #F0F0F0;
    }

    .event-image {
        width: 100%;
        max-height: 421.88px;
        object-fit: cover;
        display: block;
        border-radius: 6px;
    }

    .event-info-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 16px;
        background: #ffffff;
    }

    .location {
        display: flex;
        align-items: center;
        color: var(--color-primary);
    }

    .shadow-container {
        width: 100%;
        height: 421px;
    }

    .icons-item {
        border-radius: 50px;
        padding: 10px;
        border: 1px solid var(--color-secondary-grey-container);
        color: var(--color-accent)
    }

    .icons-color {
        color: var(--color-accent)
    }

    .icon-circle-border {
        border: 1px solid #E3E3E3;
        border-radius: 50%;
        padding: 8px;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--color-accent)
    }

    .location-icon {
        font-size: 14px;
        color: var(--color-primary);
    }

    .location-text {
        margin-left: 6px;
        font-weight: 500;
        font-size: 13px;
        color: var(--color-primary)
    }

    .icons {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .event-description {
        margin-top: 24px;
        font-size: 14px;
        font-weight: 600;
        gap: 24px;
        color: var(--color-text-heading);
        line-height: 1.6;
        font-family: 'Public Sans', sans-serif;
    }

        .event-description p {
            margin-bottom: 2rem;
        }

        .event-description img {
            max-width: 100%;
            height: auto;
            display: block;
            margin: 1rem auto;
            border-radius: 8px;
        }

        .event-description a {
            color: #00426D !important;
            text-decoration: underline !important;
        }


        .event-description iframe {
            height: revert-layer; /* This is will load the iframe in the correct height to override MudBlazor CSS */
            max-width: 100%;
            border: none;
        }

    .comment-badge {
        display: flex;
        border: 1px solid #E3E3E3;
        border-radius: 50px;
        padding: 8px 10px;
        gap: 5px;
    }

        .comment-badge .icon {
            color: var(--color-primary);
            height: 24px;
            width: 24px;
        }

        .comment-badge .count {
            font-size: 12px;
            font-weight: 600;
            color: var(--color-primary);
        }

    .main-author {
        font-family: 'Public Sans', sans-serif;
        font-weight: 500;
        font-size: 14px;
        color: var(--color-text-heading);
    }

    .main-source {
        font-family: 'Public Sans', sans-serif;
        font-weight: 500;
        font-size: 14px;
        color: var(--color-primary);
    }

    .verified {
        color: var(--color-primary);
        font-weight: bold;
    }

    .author-wrapper {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        padding: 16px;
    }

    @@media (max-width: 768px) {
        .author-wrapper {
            justify-content: space-between;
            align-items: center;
            width: 100%;
            padding: 10px;
            flex-direction: column;
            align-items: flex-start;
        }

        @@media (max-width: 600px) {
            .shadow-container {
                width: 100%;
                height: 200px;
            }
        }
</style>
