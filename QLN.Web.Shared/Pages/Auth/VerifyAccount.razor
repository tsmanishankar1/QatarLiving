@page "/qln/verify-account"
@inject HttpClient Api
@inject ISnackbar Snackbar
@inject NavigationManager NavManager
@inject ApiService Api
@using QLN.Web.Shared.Services
@using MudBlazor
@using MudBlazor.Components
@rendermode InteractiveServer
@using System.Text.RegularExpressions;

<MudPaper Class="my-12 pa-6 mx-auto" MaxWidth="400px" Elevation="4">
    <MudText Typo="Typo.h5" GutterBottom="true">Verify Your Email</MudText>

    <MudText Typo="Typo.body1">
        A verification link has been sent to <strong>@Email</strong>.
    </MudText>
    <MudText Typo="Typo.body2" Class="mt-2">
        Please check your inbox and follow the link to activate your account.
    </MudText>

    <MudButton Class="mt-4" Variant="Variant.Filled" Color="Color.Primary" Disabled="@_resending"
        OnClick="ResendVerificationLink">
        @(_resending ? "Resending..." : "Resend Link")
    </MudButton>
</MudPaper>

@code {
    [Parameter]
    public string Email { get; set; } = string.Empty;

    private bool _resending = false;

    private async Task ResendVerificationLink()
    {
        _resending = true;
        try
        {
            /* var payload = new { email = "ashwin99655@gmail.com" };
            var response = await Api.PostAsync<object, VerifyResponse>("auth/resend-confirmation-email", payload);
            var rawResponse = await response.Content.ReadAsStringAsync();
            var plainText = Regex.Replace(rawResponse, "<.*?>", string.Empty);

            if (response.Status)
            {
            Snackbar.Add(plainText, Severity.Success);
            NavManager.NavigateTo("/verify-otp");
            }
            else
            {
            Snackbar.Add(response.Message ?? "Failed to resend verification email.", Severity.Warning);
            } */
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);
        }
        finally
        {
            _resending = false;
        }
    }


    public class VerifyResponse
    {
        public bool Status { get; set; }
        public string Message { get; set; }
        public string Data { get; set; }
    }
}