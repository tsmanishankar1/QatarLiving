@using MudBlazor
@inherits SearchSortBarBase

<div>
    <div class="search-sort-container">
        <div class="left-section">
            <div class="search-wrapper">
                <img src="/qln-images/search_icon.svg" alt="search" class="search-icon" />
                <input type="text"
                       placeholder="Search for Items"
                       class="search-input"
                       @bind="searchText"
                       @oninput="OnSearchChanged" />
            </div>
        </div>

        <div class="right-section">
            <button class="sort-button" @onclick="ShowConfirmationExport">
                <img src="/qln-images/file_icon.svg" />
                Export data
            </button>
            <button class="sort-button" @onclick="ToggleSort">
                <MudIcon Icon="@SortIcon" />
                Sort by
            </button>
        </div>
    </div>

    <!-- Filter row -->
    <div style="display: flex; gap: 15px;">
   <div class="custom-date-picker-container @(showCreatedPopover ? "active" : "")" @onclick="ToggleCreatedPopover">
            <div class="label-and-value">
                <div class="custom-label">Date Created</div>
                <div class="custom-value">
                    @if (_createDateRange != null && _createDateRange.Start.HasValue && _createDateRange.End.HasValue)
                    {
                        <text>@_createDateRange.Start.Value.ToString("dd MMM yyyy") - @_createDateRange.End.Value.ToString("dd MMM yyyy")</text>
                    }
                    else
                    {
                        <span class="date-placeholder">Choose</span>
                    }
                </div>
            </div>
            <MudIcon Icon="@(showCreatedPopover ? Icons.Material.Filled.KeyboardArrowUp : Icons.Material.Filled.KeyboardArrowDown)"
                     Class="custom-date-icon" />
            <MudPopover Open="@showCreatedPopover"
                        AnchorOrigin="Origin.BottomCenter"
                        TransformOrigin="Origin.TopCenter"
                        Elevation="6"
                        Class="popover-container"
                        Style="padding:0;">
                <div class="custom-range-picker-container">
                    <!-- Left: Calendar -->
                    <div class="range-calendar">
                        <MudDateRangePicker @bind-DateRange="_createTempDateRange"
                                            PickerVariant="PickerVariant.Static"
                                            DisableToolbar="true"
                                            ShowToolbar="false"
                                            DisplayMonths="1"
                                            Class="event-custom-date-range"
                                            Style="min-width: 300px;" />
                    </div>
                    <!-- Right: Range Info + Controls -->
                    <div class="range-sidebar">
                        <div class="range-header-col">
                            <span class="date-value">
                                @(_createTempDateRange?.Start?.ToString("dd MMM yyyy") ?? "Start date")
                            </span>
                            <span class="date-value">
                                @(_createTempDateRange?.End?.ToString("dd MMM yyyy") ?? "End date")
                            </span>
                        </div>
                        <div class="range-footer">
                            <MudButton Variant="Variant.Filled" Class="popover-button" OnClick="CancelCreatedPopover">Cancel</MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="popover-button" OnClick="ConfirmCreatedPopover">Apply</MudButton>
                        </div>
                    </div>
                </div>
            </MudPopover>
        </div>
        <div class="custom-date-picker-container @(showPublishedPopover ? "active" : "")" @onclick="TogglePublishedPopover">
            <div class="label-and-value">
                <div class="custom-label">Date Published</div>
                <div class="custom-value">
                    @if (_publishDateRange != null && _publishDateRange.Start.HasValue && _publishDateRange.End.HasValue)
                    {
                        <text>@_publishDateRange.Start.Value.ToString("dd MMM yyyy") - @_publishDateRange.End.Value.ToString("dd MMM yyyy")</text>
                    }
                    else
                    {
                        <span class="date-placeholder">Choose</span>
                    }
                </div>
            </div>
            <MudIcon Icon="@(showPublishedPopover ? Icons.Material.Filled.KeyboardArrowUp : Icons.Material.Filled.KeyboardArrowDown)"
                     Class="custom-date-icon" />
            <MudPopover Open="@showPublishedPopover"
                        AnchorOrigin="Origin.BottomCenter"
                        TransformOrigin="Origin.TopCenter"
                        Elevation="6"
                        Class="popover-container"
                        Style="padding:0;">
                <div class="custom-range-picker-container">
                    <!-- Left: Calendar -->
                    <div class="range-calendar">
                        <MudDateRangePicker @bind-DateRange="_publishTempDateRange"
                                            PickerVariant="PickerVariant.Static"
                                            DisableToolbar="true"
                                            ShowToolbar="false"
                                            DisplayMonths="1"
                                            Class="event-custom-date-range"
                                            Style="min-width: 300px;" />
                    </div>
                    <!-- Right: Range Info + Controls -->
                    <div class="range-sidebar">
                        <div class="range-header-col">
                            <span class="date-value">
                                @( _publishTempDateRange?.Start?.ToString("dd MMM yyyy") ?? "Start date")
                            </span>
                            <span class="date-value">
                                @(_publishTempDateRange?.End?.ToString("dd MMM yyyy") ?? "End date")
                            </span>
                        </div>
                        <div class="range-footer">
                            <MudButton Variant="Variant.Filled" Class="popover-button" OnClick="CancelCreatedPopover">Cancel</MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="popover-button" OnClick="ConfirmPublishedPopover">Apply</MudButton>
                        </div>
                    </div>
                </div>
            </MudPopover>
        </div>
         <button class="filter-button" @onclick="ClearFilters">Clear Filters</button>
        </div>


</div>
<style>
.search-sort-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    margin-bottom: 16px;
}

.left-section {
    display: flex;
    align-items: center;
    gap: 16px;
}
.right-section {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 16px;
}

.search-wrapper {
    display: flex;
    align-items: center;
    background-color: #fff;
    border: 1px solid var(--color-secondary-grey-container);
    border-radius: 8px;
    padding: 10px 14px;
    width: 300px;
    height: 44px;
}

.search-wrapper:focus-within {
    border-color: var(--color-accent);
}

.search-icon {
    width: 20px;
    height: 20px;
    margin-right: 8px;
    color: #A1A1A1;
}

.search-input {
    border: none;
    outline: none;
    width: 100%;
    font-size: 14px;
    color: #333;
}

.sort-button {
    display: flex;
    align-items: center;
    gap: 4px;
    border: 1px solid var(--color-secondary-grey-container);
    border-radius: 8px;
    background: #fff;
    padding: 6px 14px;
    height: 44px;
    cursor: pointer;
    font-size: 14px;
    color: var(--color-text-descripton);
    font-weight: 500;
}

.sort-button:hover {
    border-color: var(--color-accent);
    color: var(--color-accent);
}
.filter-row {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-top: 8px;
}

.filter-button {
    display: flex;
    align-items: center;
    gap: 8px;
    border: 1px solid var(--color-secondary-grey-container);
    border-radius: 8px;
    padding: 10px;
    height: 40px;
    font-size: 14px;
    cursor: pointer;
    background-color: white;
    color: #333;
}

.clear-filters {
    background: none;
    border: none;
    color: #FF7F38;
    font-weight: 500;
    cursor: pointer;
}

.popover-content {
    background-color: white;
    border-radius: 20px;
    padding: 10px;
    box-sizing: border-box;
}

.popover-footer {
    display: flex;
    justify-content: space-between;
    width: 100%;
    gap: 8px;
}
.add-button{
    text-transform: capitalize;
    height: 44px;
}
.popover-button {
    width: 100%;
    text-transform: capitalize;
}
.active-filter {
    border-color: #FF7F38 !important;
    color: #FF7F38;
}

.active-icon {
    filter: brightness(0) saturate(100%) invert(54%) sepia(98%) saturate(670%) hue-rotate(340deg) brightness(105%) contrast(102%);
}

</style>
