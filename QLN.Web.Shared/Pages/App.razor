<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="QLN.Blazor.Base.styles.css" />
    <link rel="stylesheet" href="_content/QLN.Web.Shared/css/app.css" />
    <link rel="stylesheet" href="_content/QLN.Web.Shared/css/site.css" />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;500;700&display=swap"
        rel="stylesheet">
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet />
</head>

<body>
    <Routes @rendermode="InteractiveServer" />
    <script src="_content/MudBlazor/MudBlazor.min.js?v=8.5.1"></script>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/Extensions.MudBlazor.StaticInput/NavigationObserver.js?v=3.2.0"></script>
    <script>
        window.setVideoFirstFrame = function (videoElement) {
            videoElement.addEventListener('loadedmetadata', function () {
                videoElement.currentTime = 0.1;
            });
            videoElement.load();
        };

        window.playVideo = function (videoElement) {
            if (videoElement) {
                videoElement.play();
            }
        };

        window.pauseVideo = function (videoElement) {
            if (videoElement) {
                videoElement.pause();
                videoElement.currentTime = 0;
            }
        };
    </script>
    <script>
        document.addEventListener('input', function (e) {
            if (e.target.maxLength === 1 && e.target.value.length === 1) {
                let next = e.target.nextElementSibling;
                while (next && next.tagName !== 'INPUT') {
                    next = next.nextElementSibling;
                }
                if (next) next.focus();
            }
        });
    </script>
    <script>
        window.getWindowWidth = () => {
            return window.innerWidth;
        };
    </script>

    <script>
        window.registerImageLoadCallback = (imageId, dotNetRef) => {
            const img = document.getElementById(imageId);
            if (!img) return;

            img.onload = () => {
                dotNetRef.invokeMethodAsync("OnImageLoaded");
            };
        };

    </script>
    <script>
        window.triggerFileInputClick = (element) => {
            if (element) element.click();
        };
    </script>

</body>

</html>
