<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="QLN.Blazor.Base.styles.css" />
    <link rel="stylesheet" href="_content/QLN.Web.Shared/css/app.css" />
    <link rel="stylesheet" href="_content/QLN.Web.Shared/css/site.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,100..900;1,100..900&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="icon" type="image/svg+xml" href="fav-icon.svg">
    <HeadOutlet />
</head>

<body>
    <Routes @rendermode="InteractiveServer" />
    <script src="_content/MudBlazor/MudBlazor.min.js?v=8.5.1"></script>
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/GoogleAnalytics.Blazor/googleanalytics.blazor.js"></script>
    <script src="_content/Extensions.MudBlazor.StaticInput/NavigationObserver.js?v=3.2.0"></script>
    <script>
        window.setVideoFirstFrame = function (videoElement) {
            videoElement.addEventListener('loadedmetadata', function () {
                videoElement.currentTime = 0.1;
            });
            videoElement.load();
        };

        window.playVideo = function (videoElement) {
            if (videoElement) {
                videoElement.play();
            }
        };

        window.pauseVideo = function (videoElement) {
            if (videoElement) {
                videoElement.pause();
                videoElement.currentTime = 0;
            }
        };
    </script>
    <script>
        document.addEventListener('input', function (e) {
            if (e.target.maxLength === 1 && e.target.value.length === 1) {
                let next = e.target.nextElementSibling;
                while (next && next.tagName !== 'INPUT') {
                    next = next.nextElementSibling;
                }
                if (next) next.focus();
            }
        });
    </script>
    <script>
        window.getWindowWidth = () => {
            return window.innerWidth;
        };
        window.registerResizeHandler = (dotNetHelper) => {
            window.addEventListener('resize', () => {
                dotNetHelper.invokeMethodAsync('UpdateWindowWidth', window.innerWidth);
            });
        };
    </script>

    <script>
        window.registerImageLoadCallback = (imageId, dotNetRef) => {
            const img = document.getElementById(imageId);
            if (!img) return;

            img.onload = () => {
                dotNetRef.invokeMethodAsync("OnImageLoaded");
            };
        };

    </script>
    <script>
        window.toggleBodyScroll = function (shouldLock) {
            document.body.style.overflow = shouldLock ? 'hidden' : '';
        };

    </script>
    <script>
        window.triggerFileInputClick = (element) => {
            if (element) element.click();
        };
    </script>
    <script>
        window.initSeasonalSwiper = () => {
            new Swiper('.swiper-seasonal', {
                slidesPerView: 'auto',
                spaceBetween: 16,
                navigation: {
                    nextEl: '.swiper-seasonal-button-next',
                    prevEl: '.swiper-seasonal-button-prev'
                },
                breakpoints: {
                    640: { slidesPerView: 1 },
                    768: { slidesPerView: 2 },
                    1024: { slidesPerView: 3 }
                }
            });
        };

        let featuredSwiperInstance;

        function initFeaturedSwiper() {
            if (featuredSwiperInstance) {
                featuredSwiperInstance.destroy(true, true);
            }

            const swiperEl = document.querySelector('.swiper-featured');
            if (!swiperEl) {
                console.warn("Swiper element not found");
                return;
            }

            featuredSwiperInstance = new Swiper(swiperEl, {
                slidesPerView: 'auto',
                spaceBetween: 10,
                navigation: {
                    nextEl: ".swiper-featured-button-next",
                    prevEl: ".swiper-featured-button-prev",
                },
                pagination: {
                    el: ".swiper-featured-pagination",
                    clickable: true,
                },
                breakpoints: {
                    480: { slidesPerView: 1.2, spaceBetween: 12 },
                    640: { slidesPerView: 1.8, spaceBetween: 12 },
                    768: { slidesPerView: 2.5, spaceBetween: 14 },
                    860: { slidesPerView: 2.8, spaceBetween: 16 },
                    1024: { slidesPerView: 3.2, spaceBetween: 18 },
                    1120: { slidesPerView: 4, spaceBetween: 10 },
                    1280: { slidesPerView: 4.2, spaceBetween: 15 },
                    1440: { slidesPerView: 4.8, spaceBetween: 20 },
                    1600: { slidesPerView: 5.5, spaceBetween: 24 },
                    1920: { slidesPerView: 6, spaceBetween: 30 }
                }

            });
        }
        let categoriesSwiperInstance;

        function initCategoriesSwiper() {
            if (categoriesSwiperInstance) {
                categoriesSwiperInstance.destroy(true, true);
            }

            const swiperEl = document.querySelector('.swiper-categories');
            if (!swiperEl) {
                console.warn("Categories swiper element not found");
                return;
            }

            categoriesSwiperInstance = new Swiper(swiperEl, {
                slidesPerView: 'auto',
                spaceBetween: 10,
                navigation: {
                    nextEl: ".swiper-categories-button-next",
                    prevEl: ".swiper-categories-button-prev",
                },
                pagination: {
                    el: '.swiper-categories-pagination',
                    clickable: true,
                },
                breakpoints: {
                    480: { slidesPerView: 2, spaceBetween: 5 },
                    540: { slidesPerView: 2.8, spaceBetween: 5 },
                    640: { slidesPerView: 3.8, spaceBetween: 6 },
                    768: { slidesPerView: 4, spaceBetween: 7 },
                    860: { slidesPerView: 4.8, spaceBetween: 7 },
                    1024: { slidesPerView: 5.2, spaceBetween: 7 },
                    1120: { slidesPerView: 6, spaceBetween: 5 },
                    1200: { slidesPerView: 6, spaceBetween: 5 },
                },
                on: {
                    afterInit: function (swiper) {
                        const totalSlides = swiper.slides.length;
                        const visibleSlides = swiper.params.slidesPerView;

                        const nextBtn = document.querySelector(".swiper-categories-button-next");
                        const prevBtn = document.querySelector(".swiper-categories-button-prev");

                        // If all slides fit into view, hide arrows
                        if (totalSlides <= visibleSlides) {
                            nextBtn.style.display = "none";
                            prevBtn.style.display = "none";
                        } else {
                            nextBtn.style.display = "";
                            prevBtn.style.display = "";
                        }
                    },
                }
            });
        }


    </script>

    <GBAnchor />
    <script>
        window.registerPopoverClickAway = (popoverDiv, dotNetHelper) => {
            const handler = (event) => {
                if (!popoverDiv || !popoverDiv.contains(event.target)) {
                    dotNetHelper.invokeMethodAsync("CloseDatePickerExternally");
                    document.removeEventListener("click", handler);
                }
            };

            // Delay to avoid immediately triggering on same click
            setTimeout(() => {
                document.addEventListener("click", handler);
            }, 100);
        };
    </script>
</body>

</html>
