@using MudBlazor
@using QLN.Web.Shared.Components.DailyFeaturedEventCard


<div class="daily-categories-wrapper">
    <div class="daily-categories-header">
        <MudContainer MaxWidth="MaxWidth.False">
            <h3 class="daily-section-header">Featured Events</h3>
        </MudContainer>
    </div>

    @if (Loading)
    {
        <MudText>loading</MudText>
    }
    else if (FeaturedEvent?.Any() != true)
    {
        <MudText>No featured categories found.</MudText>
    }
    else
    {
        <div class="swiper-categories-container">
            <div class="swiper-categories swiper">
                <!-- Navigation arrows -->
                <div class="swiper-categories-button-prev arrow-button left">
                    <MudIcon Icon="@Icons.Material.Filled.ChevronLeft" />
                </div>
                <div class="swiper-categories-button-next arrow-button right">
                    <MudIcon Icon="@Icons.Material.Filled.ChevronRight" />
                </div>

                <div class="swiper-wrapper">
                    @foreach (var events in FeaturedEvent)
                    {
                        <div class="swiper-slide swiper-slide-Card">
                            <DailyFeaturedEventCard Item="events" OnClick="HandleCategoryClick" />
                        </div>
                    }
                </div>
            </div>
            <!-- Pagination dots -->
            <div class="swiper-categories-pagination"></div>
        </div>
    }
</div>

@code {
    [Parameter]
    public bool Loading { get; set; } = false;

    [Parameter]
    public List<DailyFeaturedEventCard.DailyEventItem> FeaturedEvent { get; set; } = new();

    [Inject]
    private IJSRuntime JSRuntime { get; set; } = default!;

    private bool _categoriesSwiperInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_categoriesSwiperInitialized)
        {
            _categoriesSwiperInitialized = true;
            await JSRuntime.InvokeVoidAsync("initCategoriesSwiper");
        }
    }
    private void HandleCategoryClick(DailyFeaturedEventCard.DailyEventItem item)
    {
        Console.WriteLine($"Clicked category: {item.Category}");
    }
}

<style>
    .daily-categories-wrapper {
        background: linear-gradient(to top, #F5F6FA 0%, #F5F6FA 20%, #FFFFFF 100%);
        width: 100%;
        font-family: 'Public Sans';
        margin-bottom: 30px;
    }

    .daily-categories-header {
        padding: 1rem 0;
    }

    .daily-section-header {
        font-weight: 500;
        text-align: center;
        font-size: 25px;
        color: var(--color-text-heading);
    }

    .swiper-categories-container {
        position: relative;
        width: 100%;
        padding: 0rem 2.5rem;
    }

    .swiper-categories {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        padding: 0;
    }

    .swiper-slide-Card {
        padding: 0.5rem;
        box-sizing: border-box;
    }

    .swiper-slide {
        width: auto;
        box-sizing: border-box;
        flex-shrink: 0;
    }

    /* Navigation Buttons - hidden initially */
    .arrow-button {
        opacity: 0;
        transition: opacity 0.3s ease;
        position: absolute;
        top: 40%;
        transform: translateY(-50%);
        z-index: 10;
        background-color: white;
        border-radius: 50%;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }

    /* Position left/right arrows */
    .arrow-button.left {
        left: 20px;
    }

    .arrow-button.right {
        right: 20px;
    }

    /* Swiper pagination dots styling */
    .swiper-categories-pagination {
        text-align: center;
        margin-top: 5px;
        user-select: none;
    }

    .swiper-categories-pagination .swiper-pagination-bullet {
        width: 8px;
        height: 8px;
        background: #bbb;
        display: inline-block;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

    .swiper-categories-pagination .swiper-pagination-bullet-active {
        width: 10px;
        height: 10px;
        background: #00426D;
    }


    /* Show arrows on hover only for desktop */
    @@media (min-width: 770px) {
        .swiper-categories-container:hover .arrow-button {
            opacity: 1;
        }
    }

    /* Hide arrows permanently on mobile */
    @@media (max-width: 770px) {
        .arrow-button {
            display: none !important;
        }

        .swiper-categories-container {
            position: relative;
            width: 100%;
            padding: 5px;
        }

        .swiper-categories-pagination {
            margin-top: 0px;
        }
    }
</style>
